/*
* generated by Xtext
*/
grammar InternalOperatorsTest;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package gpp.tests.operators.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package gpp.tests.operators.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import gpp.tests.operators.services.OperatorsTestGrammarAccess;

}

@parser::members {
 
 	private OperatorsTestGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(OperatorsTestGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleBoxModelOperators
entryRuleBoxModelOperators 
:
{ before(grammarAccess.getBoxModelOperatorsRule()); }
	 ruleBoxModelOperators
{ after(grammarAccess.getBoxModelOperatorsRule()); } 
	 EOF 
;

// Rule BoxModelOperators
ruleBoxModelOperators
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getGroup()); }
(rule__BoxModelOperators__Group__0)
{ after(grammarAccess.getBoxModelOperatorsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringConstant
entryRuleStringConstant 
:
{ before(grammarAccess.getStringConstantRule()); }
	 ruleStringConstant
{ after(grammarAccess.getStringConstantRule()); } 
	 EOF 
;

// Rule StringConstant
ruleStringConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConstantAccess().getGroup()); }
(rule__StringConstant__Group__0)
{ after(grammarAccess.getStringConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntConstant
entryRuleIntConstant 
:
{ before(grammarAccess.getIntConstantRule()); }
	 ruleIntConstant
{ after(grammarAccess.getIntConstantRule()); } 
	 EOF 
;

// Rule IntConstant
ruleIntConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntConstantAccess().getGroup()); }
(rule__IntConstant__Group__0)
{ after(grammarAccess.getIntConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorImplementationString
entryRuleOperatorImplementationString 
:
{ before(grammarAccess.getOperatorImplementationStringRule()); }
	 ruleOperatorImplementationString
{ after(grammarAccess.getOperatorImplementationStringRule()); } 
	 EOF 
;

// Rule OperatorImplementationString
ruleOperatorImplementationString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorImplementationStringAccess().getGroup()); }
(rule__OperatorImplementationString__Group__0)
{ after(grammarAccess.getOperatorImplementationStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorDefinition
entryRuleOperatorDefinition 
:
{ before(grammarAccess.getOperatorDefinitionRule()); }
	 ruleOperatorDefinition
{ after(grammarAccess.getOperatorDefinitionRule()); } 
	 EOF 
;

// Rule OperatorDefinition
ruleOperatorDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getAlternatives()); }
(rule__OperatorDefinition__Alternatives)
{ after(grammarAccess.getOperatorDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicOperatorDefinition
entryRuleBasicOperatorDefinition 
:
{ before(grammarAccess.getBasicOperatorDefinitionRule()); }
	 ruleBasicOperatorDefinition
{ after(grammarAccess.getBasicOperatorDefinitionRule()); } 
	 EOF 
;

// Rule BasicOperatorDefinition
ruleBasicOperatorDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getGroup()); }
(rule__BasicOperatorDefinition__Group__0)
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePositionalOperatorDefinition
entryRulePositionalOperatorDefinition 
:
{ before(grammarAccess.getPositionalOperatorDefinitionRule()); }
	 rulePositionalOperatorDefinition
{ after(grammarAccess.getPositionalOperatorDefinitionRule()); } 
	 EOF 
;

// Rule PositionalOperatorDefinition
rulePositionalOperatorDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPositionalOperatorDefinitionAccess().getGroup()); }
(rule__PositionalOperatorDefinition__Group__0)
{ after(grammarAccess.getPositionalOperatorDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHighlightOperatorDefinition
entryRuleHighlightOperatorDefinition 
:
{ before(grammarAccess.getHighlightOperatorDefinitionRule()); }
	 ruleHighlightOperatorDefinition
{ after(grammarAccess.getHighlightOperatorDefinitionRule()); } 
	 EOF 
;

// Rule HighlightOperatorDefinition
ruleHighlightOperatorDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHighlightOperatorDefinitionAccess().getGroup()); }
(rule__HighlightOperatorDefinition__Group__0)
{ after(grammarAccess.getHighlightOperatorDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransformingOperatorDefinition
entryRuleTransformingOperatorDefinition 
:
{ before(grammarAccess.getTransformingOperatorDefinitionRule()); }
	 ruleTransformingOperatorDefinition
{ after(grammarAccess.getTransformingOperatorDefinitionRule()); } 
	 EOF 
;

// Rule TransformingOperatorDefinition
ruleTransformingOperatorDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformingOperatorDefinitionAccess().getGroup()); }
(rule__TransformingOperatorDefinition__Group__0)
{ after(grammarAccess.getTransformingOperatorDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAliasOperatorDefinition
entryRuleAliasOperatorDefinition 
:
{ before(grammarAccess.getAliasOperatorDefinitionRule()); }
	 ruleAliasOperatorDefinition
{ after(grammarAccess.getAliasOperatorDefinitionRule()); } 
	 EOF 
;

// Rule AliasOperatorDefinition
ruleAliasOperatorDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getGroup()); }
(rule__AliasOperatorDefinition__Group__0)
{ after(grammarAccess.getAliasOperatorDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterApplication
entryRuleParameterApplication 
:
{ before(grammarAccess.getParameterApplicationRule()); }
	 ruleParameterApplication
{ after(grammarAccess.getParameterApplicationRule()); } 
	 EOF 
;

// Rule ParameterApplication
ruleParameterApplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterApplicationAccess().getGroup()); }
(rule__ParameterApplication__Group__0)
{ after(grammarAccess.getParameterApplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDefinition
entryRuleParameterDefinition 
:
{ before(grammarAccess.getParameterDefinitionRule()); }
	 ruleParameterDefinition
{ after(grammarAccess.getParameterDefinitionRule()); } 
	 EOF 
;

// Rule ParameterDefinition
ruleParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDefinitionAccess().getAlternatives()); }
(rule__ParameterDefinition__Alternatives)
{ after(grammarAccess.getParameterDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringParameterDefinition
entryRuleStringParameterDefinition 
:
{ before(grammarAccess.getStringParameterDefinitionRule()); }
	 ruleStringParameterDefinition
{ after(grammarAccess.getStringParameterDefinitionRule()); } 
	 EOF 
;

// Rule StringParameterDefinition
ruleStringParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringParameterDefinitionAccess().getGroup()); }
(rule__StringParameterDefinition__Group__0)
{ after(grammarAccess.getStringParameterDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntParameterDefinition
entryRuleIntParameterDefinition 
:
{ before(grammarAccess.getIntParameterDefinitionRule()); }
	 ruleIntParameterDefinition
{ after(grammarAccess.getIntParameterDefinitionRule()); } 
	 EOF 
;

// Rule IntParameterDefinition
ruleIntParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntParameterDefinitionAccess().getGroup()); }
(rule__IntParameterDefinition__Group__0)
{ after(grammarAccess.getIntParameterDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumParameterDefinition
entryRuleEnumParameterDefinition 
:
{ before(grammarAccess.getEnumParameterDefinitionRule()); }
	 ruleEnumParameterDefinition
{ after(grammarAccess.getEnumParameterDefinitionRule()); } 
	 EOF 
;

// Rule EnumParameterDefinition
ruleEnumParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getGroup()); }
(rule__EnumParameterDefinition__Group__0)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalEnum
entryRuleGlobalEnum 
:
{ before(grammarAccess.getGlobalEnumRule()); }
	 ruleGlobalEnum
{ after(grammarAccess.getGlobalEnumRule()); } 
	 EOF 
;

// Rule GlobalEnum
ruleGlobalEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalEnumAccess().getGroup()); }
(rule__GlobalEnum__Group__0)
{ after(grammarAccess.getGlobalEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumAlternative
entryRuleEnumAlternative 
:
{ before(grammarAccess.getEnumAlternativeRule()); }
	 ruleEnumAlternative
{ after(grammarAccess.getEnumAlternativeRule()); } 
	 EOF 
;

// Rule EnumAlternative
ruleEnumAlternative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAlternativeAccess().getNameAssignment()); }
(rule__EnumAlternative__NameAssignment)
{ after(grammarAccess.getEnumAlternativeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringParameterValue
entryRuleStringParameterValue 
:
{ before(grammarAccess.getStringParameterValueRule()); }
	 ruleStringParameterValue
{ after(grammarAccess.getStringParameterValueRule()); } 
	 EOF 
;

// Rule StringParameterValue
ruleStringParameterValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringParameterValueAccess().getAlternatives()); }
(rule__StringParameterValue__Alternatives)
{ after(grammarAccess.getStringParameterValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterApplicationValue
entryRuleParameterApplicationValue 
:
{ before(grammarAccess.getParameterApplicationValueRule()); }
	 ruleParameterApplicationValue
{ after(grammarAccess.getParameterApplicationValueRule()); } 
	 EOF 
;

// Rule ParameterApplicationValue
ruleParameterApplicationValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterApplicationValueAccess().getAlternatives()); }
(rule__ParameterApplicationValue__Alternatives)
{ after(grammarAccess.getParameterApplicationValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantReferenceValue
entryRuleConstantReferenceValue 
:
{ before(grammarAccess.getConstantReferenceValueRule()); }
	 ruleConstantReferenceValue
{ after(grammarAccess.getConstantReferenceValueRule()); } 
	 EOF 
;

// Rule ConstantReferenceValue
ruleConstantReferenceValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantReferenceValueAccess().getValueAssignment()); }
(rule__ConstantReferenceValue__ValueAssignment)
{ after(grammarAccess.getConstantReferenceValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringConstantApplication
entryRuleStringConstantApplication 
:
{ before(grammarAccess.getStringConstantApplicationRule()); }
	 ruleStringConstantApplication
{ after(grammarAccess.getStringConstantApplicationRule()); } 
	 EOF 
;

// Rule StringConstantApplication
ruleStringConstantApplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConstantApplicationAccess().getValueAssignment()); }
(rule__StringConstantApplication__ValueAssignment)
{ after(grammarAccess.getStringConstantApplicationAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntParameterValue
entryRuleIntParameterValue 
:
{ before(grammarAccess.getIntParameterValueRule()); }
	 ruleIntParameterValue
{ after(grammarAccess.getIntParameterValueRule()); } 
	 EOF 
;

// Rule IntParameterValue
ruleIntParameterValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntParameterValueAccess().getAlternatives()); }
(rule__IntParameterValue__Alternatives)
{ after(grammarAccess.getIntParameterValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntConstantApplication
entryRuleIntConstantApplication 
:
{ before(grammarAccess.getIntConstantApplicationRule()); }
	 ruleIntConstantApplication
{ after(grammarAccess.getIntConstantApplicationRule()); } 
	 EOF 
;

// Rule IntConstantApplication
ruleIntConstantApplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntConstantApplicationAccess().getValueAssignment()); }
(rule__IntConstantApplication__ValueAssignment)
{ after(grammarAccess.getIntConstantApplicationAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BoxModelOperators__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getOperatorDefinitionsAssignment_1_0()); }
(rule__BoxModelOperators__OperatorDefinitionsAssignment_1_0)
{ after(grammarAccess.getBoxModelOperatorsAccess().getOperatorDefinitionsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBoxModelOperatorsAccess().getEnumerationsAssignment_1_1()); }
(rule__BoxModelOperators__EnumerationsAssignment_1_1)
{ after(grammarAccess.getBoxModelOperatorsAccess().getEnumerationsAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getBoxModelOperatorsAccess().getIntConstantsAssignment_1_2()); }
(rule__BoxModelOperators__IntConstantsAssignment_1_2)
{ after(grammarAccess.getBoxModelOperatorsAccess().getIntConstantsAssignment_1_2()); }
)

    |(
{ before(grammarAccess.getBoxModelOperatorsAccess().getStringConstantsAssignment_1_3()); }
(rule__BoxModelOperators__StringConstantsAssignment_1_3)
{ after(grammarAccess.getBoxModelOperatorsAccess().getStringConstantsAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getStringKeyword_0_0()); }

	'string' 

{ after(grammarAccess.getStringConstantAccess().getStringKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getStringConstantAccess().getStrKeyword_0_1()); }

	'str' 

{ after(grammarAccess.getStringConstantAccess().getStrKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getIntegerKeyword_0_0()); }

	'integer' 

{ after(grammarAccess.getIntConstantAccess().getIntegerKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getIntConstantAccess().getIntKeyword_0_1()); }

	'int' 

{ after(grammarAccess.getIntConstantAccess().getIntKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getBasicOperatorDefinitionParserRuleCall_0()); }
	ruleBasicOperatorDefinition
{ after(grammarAccess.getOperatorDefinitionAccess().getBasicOperatorDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperatorDefinitionAccess().getAliasOperatorDefinitionParserRuleCall_1()); }
	ruleAliasOperatorDefinition
{ after(grammarAccess.getOperatorDefinitionAccess().getAliasOperatorDefinitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getHighlightOperatorDefinitionParserRuleCall_0_0()); }
	ruleHighlightOperatorDefinition
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getHighlightOperatorDefinitionParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getPositionalOperatorDefinitionParserRuleCall_0_1()); }
	rulePositionalOperatorDefinition
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getPositionalOperatorDefinitionParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getTransformingOperatorDefinitionParserRuleCall_0_2()); }
	ruleTransformingOperatorDefinition
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getTransformingOperatorDefinitionParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalOperatorDefinition__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalOperatorDefinitionAccess().getPopKeyword_1_0()); }

	'pop' 

{ after(grammarAccess.getPositionalOperatorDefinitionAccess().getPopKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getPositionalOperatorDefinitionAccess().getPoperatorKeyword_1_1()); }

	'poperator' 

{ after(grammarAccess.getPositionalOperatorDefinitionAccess().getPoperatorKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HighlightOperatorDefinition__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHighlightOperatorDefinitionAccess().getHlopKeyword_1_0()); }

	'hlop' 

{ after(grammarAccess.getHighlightOperatorDefinitionAccess().getHlopKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getHighlightOperatorDefinitionAccess().getHloperatorKeyword_1_1()); }

	'hloperator' 

{ after(grammarAccess.getHighlightOperatorDefinitionAccess().getHloperatorKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformingOperatorDefinition__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformingOperatorDefinitionAccess().getTopKeyword_1_0()); }

	'top' 

{ after(grammarAccess.getTransformingOperatorDefinitionAccess().getTopKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getTransformingOperatorDefinitionAccess().getToperatorKeyword_1_1()); }

	'toperator' 

{ after(grammarAccess.getTransformingOperatorDefinitionAccess().getToperatorKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getStringParameterDefinitionParserRuleCall_0()); }
	ruleStringParameterDefinition
{ after(grammarAccess.getParameterDefinitionAccess().getStringParameterDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParameterDefinitionAccess().getIntParameterDefinitionParserRuleCall_1()); }
	ruleIntParameterDefinition
{ after(grammarAccess.getParameterDefinitionAccess().getIntParameterDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParameterDefinitionAccess().getEnumParameterDefinitionParserRuleCall_2()); }
	ruleEnumParameterDefinition
{ after(grammarAccess.getParameterDefinitionAccess().getEnumParameterDefinitionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringParameterDefinition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringParameterDefinitionAccess().getStringKeyword_0_0()); }

	'string' 

{ after(grammarAccess.getStringParameterDefinitionAccess().getStringKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getStringParameterDefinitionAccess().getStrKeyword_0_1()); }

	'str' 

{ after(grammarAccess.getStringParameterDefinitionAccess().getStrKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameterDefinition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntParameterDefinitionAccess().getIntegerKeyword_0_0()); }

	'integer' 

{ after(grammarAccess.getIntParameterDefinitionAccess().getIntegerKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getIntParameterDefinitionAccess().getIntKeyword_0_1()); }

	'int' 

{ after(grammarAccess.getIntParameterDefinitionAccess().getIntKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getGroup_1_0()); }
(rule__EnumParameterDefinition__Group_1_0__0)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getGroup_1_1()); }
(rule__EnumParameterDefinition__Group_1_1__0)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringParameterValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringParameterValueAccess().getStringValueParserRuleCall_0()); }
	ruleStringValue
{ after(grammarAccess.getStringParameterValueAccess().getStringValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStringParameterValueAccess().getStringConstantApplicationParserRuleCall_1()); }
	ruleStringConstantApplication
{ after(grammarAccess.getStringParameterValueAccess().getStringConstantApplicationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterApplicationValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterApplicationValueAccess().getStringValueParserRuleCall_0()); }
	ruleStringValue
{ after(grammarAccess.getParameterApplicationValueAccess().getStringValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParameterApplicationValueAccess().getIntValueParserRuleCall_1()); }
	ruleIntValue
{ after(grammarAccess.getParameterApplicationValueAccess().getIntValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParameterApplicationValueAccess().getConstantReferenceValueParserRuleCall_2()); }
	ruleConstantReferenceValue
{ after(grammarAccess.getParameterApplicationValueAccess().getConstantReferenceValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntParameterValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntParameterValueAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getIntParameterValueAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntParameterValueAccess().getIntConstantApplicationParserRuleCall_1()); }
	ruleIntConstantApplication
{ after(grammarAccess.getIntParameterValueAccess().getIntConstantApplicationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__BoxModelOperators__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoxModelOperators__Group__0__Impl
	rule__BoxModelOperators__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoxModelOperators__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getImportsAssignment_0()); }
(rule__BoxModelOperators__ImportsAssignment_0)*
{ after(grammarAccess.getBoxModelOperatorsAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoxModelOperators__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoxModelOperators__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoxModelOperators__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getAlternatives_1()); }
(rule__BoxModelOperators__Alternatives_1)*
{ after(grammarAccess.getBoxModelOperatorsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringConstant__Group__0__Impl
	rule__StringConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getAlternatives_0()); }
(rule__StringConstant__Alternatives_0)
{ after(grammarAccess.getStringConstantAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringConstant__Group__1__Impl
	rule__StringConstant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getNameAssignment_1()); }
(rule__StringConstant__NameAssignment_1)
{ after(grammarAccess.getStringConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringConstant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringConstant__Group__2__Impl
	rule__StringConstant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getStringConstantAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringConstant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringConstant__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getValueAssignment_3()); }
(rule__StringConstant__ValueAssignment_3)
{ after(grammarAccess.getStringConstantAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IntConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntConstant__Group__0__Impl
	rule__IntConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getAlternatives_0()); }
(rule__IntConstant__Alternatives_0)
{ after(grammarAccess.getIntConstantAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntConstant__Group__1__Impl
	rule__IntConstant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getNameAssignment_1()); }
(rule__IntConstant__NameAssignment_1)
{ after(grammarAccess.getIntConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntConstant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntConstant__Group__2__Impl
	rule__IntConstant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getIntConstantAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntConstant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntConstant__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getValueAssignment_3()); }
(rule__IntConstant__ValueAssignment_3)
{ after(grammarAccess.getIntConstantAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperatorImplementationString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorImplementationString__Group__0__Impl
	rule__OperatorImplementationString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorImplementationString__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorImplementationStringAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getOperatorImplementationStringAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorImplementationString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorImplementationString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorImplementationString__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorImplementationStringAccess().getGroup_1()); }
(rule__OperatorImplementationString__Group_1__0)*
{ after(grammarAccess.getOperatorImplementationStringAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperatorImplementationString__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorImplementationString__Group_1__0__Impl
	rule__OperatorImplementationString__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorImplementationString__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorImplementationStringAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getOperatorImplementationStringAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorImplementationString__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorImplementationString__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorImplementationString__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorImplementationStringAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getOperatorImplementationStringAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BasicOperatorDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group__0__Impl
	rule__BasicOperatorDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getAlternatives_0()); }
(rule__BasicOperatorDefinition__Alternatives_0)
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicOperatorDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group__1__Impl
	rule__BasicOperatorDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getNameAssignment_1()); }
(rule__BasicOperatorDefinition__NameAssignment_1)
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicOperatorDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group__2__Impl
	rule__BasicOperatorDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getBasicOperatorDefinitionAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicOperatorDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group__3__Impl
	rule__BasicOperatorDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getImplementationAssignment_3()); }
(rule__BasicOperatorDefinition__ImplementationAssignment_3)
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getImplementationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicOperatorDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group__4__Impl
	rule__BasicOperatorDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getBasicOperatorDefinitionAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicOperatorDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group__5__Impl
	rule__BasicOperatorDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getGroup_5()); }
(rule__BasicOperatorDefinition__Group_5__0)?
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicOperatorDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getBasicOperatorDefinitionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__BasicOperatorDefinition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group_5__0__Impl
	rule__BasicOperatorDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getColonKeyword_5_0()); }

	':' 

{ after(grammarAccess.getBasicOperatorDefinitionAccess().getColonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicOperatorDefinition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicOperatorDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getParametersAssignment_5_1()); }
(rule__BasicOperatorDefinition__ParametersAssignment_5_1)
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getParametersAssignment_5_1()); }
)
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getParametersAssignment_5_1()); }
(rule__BasicOperatorDefinition__ParametersAssignment_5_1)*
{ after(grammarAccess.getBasicOperatorDefinitionAccess().getParametersAssignment_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PositionalOperatorDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalOperatorDefinition__Group__0__Impl
	rule__PositionalOperatorDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalOperatorDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalOperatorDefinitionAccess().getPositionalOperatorDefinitionAction_0()); }
(

)
{ after(grammarAccess.getPositionalOperatorDefinitionAccess().getPositionalOperatorDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalOperatorDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalOperatorDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalOperatorDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalOperatorDefinitionAccess().getAlternatives_1()); }
(rule__PositionalOperatorDefinition__Alternatives_1)
{ after(grammarAccess.getPositionalOperatorDefinitionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HighlightOperatorDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HighlightOperatorDefinition__Group__0__Impl
	rule__HighlightOperatorDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighlightOperatorDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHighlightOperatorDefinitionAccess().getHighlightOperatorDefinitionAction_0()); }
(

)
{ after(grammarAccess.getHighlightOperatorDefinitionAccess().getHighlightOperatorDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HighlightOperatorDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HighlightOperatorDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighlightOperatorDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHighlightOperatorDefinitionAccess().getAlternatives_1()); }
(rule__HighlightOperatorDefinition__Alternatives_1)
{ after(grammarAccess.getHighlightOperatorDefinitionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransformingOperatorDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformingOperatorDefinition__Group__0__Impl
	rule__TransformingOperatorDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformingOperatorDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformingOperatorDefinitionAccess().getTransformingOperatorDefinitionAction_0()); }
(

)
{ after(grammarAccess.getTransformingOperatorDefinitionAccess().getTransformingOperatorDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformingOperatorDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformingOperatorDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformingOperatorDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformingOperatorDefinitionAccess().getAlternatives_1()); }
(rule__TransformingOperatorDefinition__Alternatives_1)
{ after(grammarAccess.getTransformingOperatorDefinitionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AliasOperatorDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group__0__Impl
	rule__AliasOperatorDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getAliasKeyword_0()); }

	'alias' 

{ after(grammarAccess.getAliasOperatorDefinitionAccess().getAliasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperatorDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group__1__Impl
	rule__AliasOperatorDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getNameAssignment_1()); }
(rule__AliasOperatorDefinition__NameAssignment_1)
{ after(grammarAccess.getAliasOperatorDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperatorDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group__2__Impl
	rule__AliasOperatorDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getAliasOperatorDefinitionAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperatorDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group__3__Impl
	rule__AliasOperatorDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getOperatorAssignment_3()); }
(rule__AliasOperatorDefinition__OperatorAssignment_3)
{ after(grammarAccess.getAliasOperatorDefinitionAccess().getOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperatorDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group__4__Impl
	rule__AliasOperatorDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getAliasOperatorDefinitionAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperatorDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group__5__Impl
	rule__AliasOperatorDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getGroup_5()); }
(rule__AliasOperatorDefinition__Group_5__0)?
{ after(grammarAccess.getAliasOperatorDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperatorDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getAliasOperatorDefinitionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AliasOperatorDefinition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group_5__0__Impl
	rule__AliasOperatorDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getColonKeyword_5_0()); }

	':' 

{ after(grammarAccess.getAliasOperatorDefinitionAccess().getColonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperatorDefinition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperatorDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getParametersAssignment_5_1()); }
(rule__AliasOperatorDefinition__ParametersAssignment_5_1)
{ after(grammarAccess.getAliasOperatorDefinitionAccess().getParametersAssignment_5_1()); }
)
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getParametersAssignment_5_1()); }
(rule__AliasOperatorDefinition__ParametersAssignment_5_1)*
{ after(grammarAccess.getAliasOperatorDefinitionAccess().getParametersAssignment_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterApplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterApplication__Group__0__Impl
	rule__ParameterApplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterApplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterApplicationAccess().getReferencedParameterAssignment_0()); }
(rule__ParameterApplication__ReferencedParameterAssignment_0)
{ after(grammarAccess.getParameterApplicationAccess().getReferencedParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterApplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterApplication__Group__1__Impl
	rule__ParameterApplication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterApplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterApplicationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getParameterApplicationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterApplication__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterApplication__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterApplication__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterApplicationAccess().getValueAssignment_2()); }
(rule__ParameterApplication__ValueAssignment_2)
{ after(grammarAccess.getParameterApplicationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringParameterDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringParameterDefinition__Group__0__Impl
	rule__StringParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringParameterDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringParameterDefinitionAccess().getAlternatives_0()); }
(rule__StringParameterDefinition__Alternatives_0)
{ after(grammarAccess.getStringParameterDefinitionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringParameterDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringParameterDefinition__Group__1__Impl
	rule__StringParameterDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringParameterDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringParameterDefinitionAccess().getNameAssignment_1()); }
(rule__StringParameterDefinition__NameAssignment_1)
{ after(grammarAccess.getStringParameterDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringParameterDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringParameterDefinition__Group__2__Impl
	rule__StringParameterDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringParameterDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringParameterDefinitionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getStringParameterDefinitionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringParameterDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringParameterDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringParameterDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringParameterDefinitionAccess().getValueAssignment_3()); }
(rule__StringParameterDefinition__ValueAssignment_3)
{ after(grammarAccess.getStringParameterDefinitionAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IntParameterDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntParameterDefinition__Group__0__Impl
	rule__IntParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameterDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntParameterDefinitionAccess().getAlternatives_0()); }
(rule__IntParameterDefinition__Alternatives_0)
{ after(grammarAccess.getIntParameterDefinitionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntParameterDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntParameterDefinition__Group__1__Impl
	rule__IntParameterDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameterDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntParameterDefinitionAccess().getNameAssignment_1()); }
(rule__IntParameterDefinition__NameAssignment_1)
{ after(grammarAccess.getIntParameterDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntParameterDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntParameterDefinition__Group__2__Impl
	rule__IntParameterDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameterDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntParameterDefinitionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getIntParameterDefinitionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntParameterDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntParameterDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameterDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntParameterDefinitionAccess().getValueAssignment_3()); }
(rule__IntParameterDefinition__ValueAssignment_3)
{ after(grammarAccess.getIntParameterDefinitionAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumParameterDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group__0__Impl
	rule__EnumParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getEnumParameterDefinitionAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group__1__Impl
	rule__EnumParameterDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getAlternatives_1()); }
(rule__EnumParameterDefinition__Alternatives_1)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group__2__Impl
	rule__EnumParameterDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getEnumParameterDefinitionAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group__3__Impl
	rule__EnumParameterDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getNameAssignment_3()); }
(rule__EnumParameterDefinition__NameAssignment_3)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group__4__Impl
	rule__EnumParameterDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getEnumParameterDefinitionAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getValueAssignment_5()); }
(rule__EnumParameterDefinition__ValueAssignment_5)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EnumParameterDefinition__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group_1_0__0__Impl
	rule__EnumParameterDefinition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getAlternativesAssignment_1_0_0()); }
(rule__EnumParameterDefinition__AlternativesAssignment_1_0_0)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getAlternativesAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getGroup_1_0_1()); }
(rule__EnumParameterDefinition__Group_1_0_1__0)*
{ after(grammarAccess.getEnumParameterDefinitionAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumParameterDefinition__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group_1_0_1__0__Impl
	rule__EnumParameterDefinition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getCommaKeyword_1_0_1_0()); }

	',' 

{ after(grammarAccess.getEnumParameterDefinitionAccess().getCommaKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getAlternativesAssignment_1_0_1_1()); }
(rule__EnumParameterDefinition__AlternativesAssignment_1_0_1_1)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getAlternativesAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumParameterDefinition__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group_1_1__0__Impl
	rule__EnumParameterDefinition__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getLeftSquareBracketKeyword_1_1_0()); }

	'[' 

{ after(grammarAccess.getEnumParameterDefinitionAccess().getLeftSquareBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group_1_1__1__Impl
	rule__EnumParameterDefinition__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getEnumerationAssignment_1_1_1()); }
(rule__EnumParameterDefinition__EnumerationAssignment_1_1_1)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getEnumerationAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumParameterDefinition__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumParameterDefinition__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getRightSquareBracketKeyword_1_1_2()); }

	']' 

{ after(grammarAccess.getEnumParameterDefinitionAccess().getRightSquareBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GlobalEnum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group__0__Impl
	rule__GlobalEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getGlobalEnumAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalEnum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group__1__Impl
	rule__GlobalEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getNameAssignment_1()); }
(rule__GlobalEnum__NameAssignment_1)
{ after(grammarAccess.getGlobalEnumAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalEnum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group__2__Impl
	rule__GlobalEnum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getGlobalEnumAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalEnum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group__3__Impl
	rule__GlobalEnum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getGlobalEnumAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalEnum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group__4__Impl
	rule__GlobalEnum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getAlternativesAssignment_4()); }
(rule__GlobalEnum__AlternativesAssignment_4)
{ after(grammarAccess.getGlobalEnumAccess().getAlternativesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalEnum__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group__5__Impl
	rule__GlobalEnum__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getGroup_5()); }
(rule__GlobalEnum__Group_5__0)*
{ after(grammarAccess.getGlobalEnumAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalEnum__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getGlobalEnumAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__GlobalEnum__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group_5__0__Impl
	rule__GlobalEnum__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getGlobalEnumAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalEnum__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalEnum__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getAlternativesAssignment_5_1()); }
(rule__GlobalEnum__AlternativesAssignment_5_1)
{ after(grammarAccess.getGlobalEnumAccess().getAlternativesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__BoxModelOperators__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getBoxModelOperatorsAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoxModelOperators__OperatorDefinitionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getOperatorDefinitionsOperatorDefinitionParserRuleCall_1_0_0()); }
	ruleOperatorDefinition{ after(grammarAccess.getBoxModelOperatorsAccess().getOperatorDefinitionsOperatorDefinitionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoxModelOperators__EnumerationsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getEnumerationsGlobalEnumParserRuleCall_1_1_0()); }
	ruleGlobalEnum{ after(grammarAccess.getBoxModelOperatorsAccess().getEnumerationsGlobalEnumParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoxModelOperators__IntConstantsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getIntConstantsIntConstantParserRuleCall_1_2_0()); }
	ruleIntConstant{ after(grammarAccess.getBoxModelOperatorsAccess().getIntConstantsIntConstantParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoxModelOperators__StringConstantsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxModelOperatorsAccess().getStringConstantsStringConstantParserRuleCall_1_3_0()); }
	ruleStringConstant{ after(grammarAccess.getBoxModelOperatorsAccess().getStringConstantsStringConstantParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStringConstantAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIntConstantAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getValueINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getIntConstantAccess().getValueINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getBasicOperatorDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__ImplementationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getImplementationOperatorImplementationStringParserRuleCall_3_0()); }
	ruleOperatorImplementationString{ after(grammarAccess.getBasicOperatorDefinitionAccess().getImplementationOperatorImplementationStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicOperatorDefinition__ParametersAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicOperatorDefinitionAccess().getParametersParameterDefinitionParserRuleCall_5_1_0()); }
	ruleParameterDefinition{ after(grammarAccess.getBasicOperatorDefinitionAccess().getParametersParameterDefinitionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAliasOperatorDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getOperatorOperatorDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getOperatorOperatorDefinitionIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getAliasOperatorDefinitionAccess().getOperatorOperatorDefinitionIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAliasOperatorDefinitionAccess().getOperatorOperatorDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperatorDefinition__ParametersAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorDefinitionAccess().getParametersParameterApplicationParserRuleCall_5_1_0()); }
	ruleParameterApplication{ after(grammarAccess.getAliasOperatorDefinitionAccess().getParametersParameterApplicationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterApplication__ReferencedParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterApplicationAccess().getReferencedParameterParameterDefinitionCrossReference_0_0()); }
(
{ before(grammarAccess.getParameterApplicationAccess().getReferencedParameterParameterDefinitionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterApplicationAccess().getReferencedParameterParameterDefinitionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParameterApplicationAccess().getReferencedParameterParameterDefinitionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterApplication__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterApplicationAccess().getValueParameterApplicationValueParserRuleCall_2_0()); }
	ruleParameterApplicationValue{ after(grammarAccess.getParameterApplicationAccess().getValueParameterApplicationValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringParameterDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringParameterDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStringParameterDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringParameterDefinition__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringParameterDefinitionAccess().getValueStringParameterValueParserRuleCall_3_0()); }
	ruleStringParameterValue{ after(grammarAccess.getStringParameterDefinitionAccess().getValueStringParameterValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameterDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntParameterDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIntParameterDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameterDefinition__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntParameterDefinitionAccess().getValueIntParameterValueParserRuleCall_3_0()); }
	ruleIntParameterValue{ after(grammarAccess.getIntParameterDefinitionAccess().getValueIntParameterValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__AlternativesAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getAlternativesEnumAlternativeParserRuleCall_1_0_0_0()); }
	ruleEnumAlternative{ after(grammarAccess.getEnumParameterDefinitionAccess().getAlternativesEnumAlternativeParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__AlternativesAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getAlternativesEnumAlternativeParserRuleCall_1_0_1_1_0()); }
	ruleEnumAlternative{ after(grammarAccess.getEnumParameterDefinitionAccess().getAlternativesEnumAlternativeParserRuleCall_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__EnumerationAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getEnumerationGlobalEnumCrossReference_1_1_1_0()); }
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getEnumerationGlobalEnumIDTerminalRuleCall_1_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEnumParameterDefinitionAccess().getEnumerationGlobalEnumIDTerminalRuleCall_1_1_1_0_1()); }
)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getEnumerationGlobalEnumCrossReference_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getEnumParameterDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumParameterDefinition__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getValueEnumAlternativeCrossReference_5_0()); }
(
{ before(grammarAccess.getEnumParameterDefinitionAccess().getValueEnumAlternativeIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getEnumParameterDefinitionAccess().getValueEnumAlternativeIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getEnumParameterDefinitionAccess().getValueEnumAlternativeCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGlobalEnumAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__AlternativesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getAlternativesEnumAlternativeParserRuleCall_4_0()); }
	ruleEnumAlternative{ after(grammarAccess.getGlobalEnumAccess().getAlternativesEnumAlternativeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalEnum__AlternativesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalEnumAccess().getAlternativesEnumAlternativeParserRuleCall_5_1_0()); }
	ruleEnumAlternative{ after(grammarAccess.getGlobalEnumAccess().getAlternativesEnumAlternativeParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumAlternative__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAlternativeAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEnumAlternativeAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantReferenceValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantReferenceValueAccess().getValueConstantCrossReference_0()); }
(
{ before(grammarAccess.getConstantReferenceValueAccess().getValueConstantIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantReferenceValueAccess().getValueConstantIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantReferenceValueAccess().getValueConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantApplication__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantApplicationAccess().getValueStringConstantCrossReference_0()); }
(
{ before(grammarAccess.getStringConstantApplicationAccess().getValueStringConstantIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getStringConstantApplicationAccess().getValueStringConstantIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getStringConstantApplicationAccess().getValueStringConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstantApplication__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantApplicationAccess().getValueIntConstantCrossReference_0()); }
(
{ before(grammarAccess.getIntConstantApplicationAccess().getValueIntConstantIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getIntConstantApplicationAccess().getValueIntConstantIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getIntConstantApplicationAccess().getValueIntConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


