/*
* generated by Xtext
*/
grammar InternalTypeSystem;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package it.xtypes.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.xtypes.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import it.xtypes.services.TypeSystemGrammarAccess;

}

@parser::members {
 
 	private TypeSystemGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TypeSystemGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTypeSystemDefinition
entryRuleTypeSystemDefinition 
:
{ before(grammarAccess.getTypeSystemDefinitionRule()); }
	 ruleTypeSystemDefinition
{ after(grammarAccess.getTypeSystemDefinitionRule()); } 
	 EOF 
;

// Rule TypeSystemDefinition
ruleTypeSystemDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getGroup()); }
(rule__TypeSystemDefinition__Group__0)
{ after(grammarAccess.getTypeSystemDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJudgmentDescription
entryRuleJudgmentDescription 
:
{ before(grammarAccess.getJudgmentDescriptionRule()); }
	 ruleJudgmentDescription
{ after(grammarAccess.getJudgmentDescriptionRule()); } 
	 EOF 
;

// Rule JudgmentDescription
ruleJudgmentDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getGroup()); }
(rule__JudgmentDescription__Group__0)
{ after(grammarAccess.getJudgmentDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getAlternatives()); }
(rule__Rule__Alternatives)
{ after(grammarAccess.getRuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAxiom
entryRuleAxiom 
:
{ before(grammarAccess.getAxiomRule()); }
	 ruleAxiom
{ after(grammarAccess.getAxiomRule()); } 
	 EOF 
;

// Rule Axiom
ruleAxiom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAxiomAccess().getGroup()); }
(rule__Axiom__Group__0)
{ after(grammarAccess.getAxiomAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleWithPremises
entryRuleRuleWithPremises 
:
{ before(grammarAccess.getRuleWithPremisesRule()); }
	 ruleRuleWithPremises
{ after(grammarAccess.getRuleWithPremisesRule()); } 
	 EOF 
;

// Rule RuleWithPremises
ruleRuleWithPremises
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getGroup()); }
(rule__RuleWithPremises__Group__0)
{ after(grammarAccess.getRuleWithPremisesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypingJudgment
entryRuleTypingJudgment 
:
{ before(grammarAccess.getTypingJudgmentRule()); }
	 ruleTypingJudgment
{ after(grammarAccess.getTypingJudgmentRule()); } 
	 EOF 
;

// Rule TypingJudgment
ruleTypingJudgment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypingJudgmentAccess().getAlternatives()); }
(rule__TypingJudgment__Alternatives)
{ after(grammarAccess.getTypingJudgmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrTypingJudgment
entryRuleOrTypingJudgment 
:
{ before(grammarAccess.getOrTypingJudgmentRule()); }
	 ruleOrTypingJudgment
{ after(grammarAccess.getOrTypingJudgmentRule()); } 
	 EOF 
;

// Rule OrTypingJudgment
ruleOrTypingJudgment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getGroup()); }
(rule__OrTypingJudgment__Group__0)
{ after(grammarAccess.getOrTypingJudgmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrBranch
entryRuleOrBranch 
:
{ before(grammarAccess.getOrBranchRule()); }
	 ruleOrBranch
{ after(grammarAccess.getOrBranchRule()); } 
	 EOF 
;

// Rule OrBranch
ruleOrBranch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getOrBranchAccess().getJudgmentsAssignment()); }
(rule__OrBranch__JudgmentsAssignment)
{ after(grammarAccess.getOrBranchAccess().getJudgmentsAssignment()); }
)
(
{ before(grammarAccess.getOrBranchAccess().getJudgmentsAssignment()); }
(rule__OrBranch__JudgmentsAssignment)*
{ after(grammarAccess.getOrBranchAccess().getJudgmentsAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleVariableDeclarationWithType
entryRuleVariableDeclarationWithType 
:
{ before(grammarAccess.getVariableDeclarationWithTypeRule()); }
	 ruleVariableDeclarationWithType
{ after(grammarAccess.getVariableDeclarationWithTypeRule()); } 
	 EOF 
;

// Rule VariableDeclarationWithType
ruleVariableDeclarationWithType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getGroup()); }
(rule__VariableDeclarationWithType__Group__0)
{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionType
entryRuleExpressionType 
:
{ before(grammarAccess.getExpressionTypeRule()); }
	 ruleExpressionType
{ after(grammarAccess.getExpressionTypeRule()); } 
	 EOF 
;

// Rule ExpressionType
ruleExpressionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionTypeAccess().getAlternatives()); }
(rule__ExpressionType__Alternatives)
{ after(grammarAccess.getExpressionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionType
entryRuleCollectionType 
:
{ before(grammarAccess.getCollectionTypeRule()); }
	 ruleCollectionType
{ after(grammarAccess.getCollectionTypeRule()); } 
	 EOF 
;

// Rule CollectionType
ruleCollectionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionTypeAccess().getGroup()); }
(rule__CollectionType__Group__0)
{ after(grammarAccess.getCollectionTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEClassifierType
entryRuleEClassifierType 
:
{ before(grammarAccess.getEClassifierTypeRule()); }
	 ruleEClassifierType
{ after(grammarAccess.getEClassifierTypeRule()); } 
	 EOF 
;

// Rule EClassifierType
ruleEClassifierType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEClassifierTypeAccess().getEclassifierAssignment()); }
(rule__EClassifierType__EclassifierAssignment)
{ after(grammarAccess.getEClassifierTypeAccess().getEclassifierAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicType
entryRuleBasicType 
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicTypeAccess().getBasicAssignment()); }
(rule__BasicType__BasicAssignment)
{ after(grammarAccess.getBasicTypeAccess().getBasicAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableSimpleDeclaration
entryRuleVariableSimpleDeclaration 
:
{ before(grammarAccess.getVariableSimpleDeclarationRule()); }
	 ruleVariableSimpleDeclaration
{ after(grammarAccess.getVariableSimpleDeclarationRule()); } 
	 EOF 
;

// Rule VariableSimpleDeclaration
ruleVariableSimpleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableSimpleDeclarationAccess().getNameAssignment()); }
(rule__VariableSimpleDeclaration__NameAssignment)
{ after(grammarAccess.getVariableSimpleDeclarationAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuantification
entryRuleQuantification 
:
{ before(grammarAccess.getQuantificationRule()); }
	 ruleQuantification
{ after(grammarAccess.getQuantificationRule()); } 
	 EOF 
;

// Rule Quantification
ruleQuantification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuantificationAccess().getGroup()); }
(rule__Quantification__Group__0)
{ after(grammarAccess.getQuantificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForEach
entryRuleForEach 
:
{ before(grammarAccess.getForEachRule()); }
	 ruleForEach
{ after(grammarAccess.getForEachRule()); } 
	 EOF 
;

// Rule ForEach
ruleForEach
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForEachAccess().getGroup()); }
(rule__ForEach__Group__0)
{ after(grammarAccess.getForEachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForAll
entryRuleForAll 
:
{ before(grammarAccess.getForAllRule()); }
	 ruleForAll
{ after(grammarAccess.getForAllRule()); } 
	 EOF 
;

// Rule ForAll
ruleForAll
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForAllAccess().getGroup()); }
(rule__ForAll__Group__0)
{ after(grammarAccess.getForAllAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExists
entryRuleExists 
:
{ before(grammarAccess.getExistsRule()); }
	 ruleExists
{ after(grammarAccess.getExistsRule()); } 
	 EOF 
;

// Rule Exists
ruleExists
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistsAccess().getGroup()); }
(rule__Exists__Group__0)
{ after(grammarAccess.getExistsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStandardOperation
entryRuleStandardOperation 
:
{ before(grammarAccess.getStandardOperationRule()); }
	 ruleStandardOperation
{ after(grammarAccess.getStandardOperationRule()); } 
	 EOF 
;

// Rule StandardOperation
ruleStandardOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStandardOperationAccess().getAlternatives()); }
(rule__StandardOperation__Alternatives)
{ after(grammarAccess.getStandardOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnvironmentOperation
entryRuleEnvironmentOperation 
:
{ before(grammarAccess.getEnvironmentOperationRule()); }
	 ruleEnvironmentOperation
{ after(grammarAccess.getEnvironmentOperationRule()); } 
	 EOF 
;

// Rule EnvironmentOperation
ruleEnvironmentOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getAlternatives()); }
(rule__EnvironmentOperation__Alternatives)
{ after(grammarAccess.getEnvironmentOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListOperation
entryRuleListOperation 
:
{ before(grammarAccess.getListOperationRule()); }
	 ruleListOperation
{ after(grammarAccess.getListOperationRule()); } 
	 EOF 
;

// Rule ListOperation
ruleListOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListOperationAccess().getAlternatives()); }
(rule__ListOperation__Alternatives)
{ after(grammarAccess.getListOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquals
entryRuleEquals 
:
{ before(grammarAccess.getEqualsRule()); }
	 ruleEquals
{ after(grammarAccess.getEqualsRule()); } 
	 EOF 
;

// Rule Equals
ruleEquals
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualsAccess().getGroup()); }
(rule__Equals__Group__0)
{ after(grammarAccess.getEqualsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFail
entryRuleFail 
:
{ before(grammarAccess.getFailRule()); }
	 ruleFail
{ after(grammarAccess.getFailRule()); } 
	 EOF 
;

// Rule Fail
ruleFail
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFailAccess().getGroup()); }
(rule__Fail__Group__0)
{ after(grammarAccess.getFailAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuccess
entryRuleSuccess 
:
{ before(grammarAccess.getSuccessRule()); }
	 ruleSuccess
{ after(grammarAccess.getSuccessRule()); } 
	 EOF 
;

// Rule Success
ruleSuccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuccessAccess().getGroup()); }
(rule__Success__Group__0)
{ after(grammarAccess.getSuccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypingJudgmentWithEnvironment
entryRuleTypingJudgmentWithEnvironment 
:
{ before(grammarAccess.getTypingJudgmentWithEnvironmentRule()); }
	 ruleTypingJudgmentWithEnvironment
{ after(grammarAccess.getTypingJudgmentWithEnvironmentRule()); } 
	 EOF 
;

// Rule TypingJudgmentWithEnvironment
ruleTypingJudgmentWithEnvironment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getGroup()); }
(rule__TypingJudgmentWithEnvironment__Group__0)
{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleErrorSpecification
entryRuleErrorSpecification 
:
{ before(grammarAccess.getErrorSpecificationRule()); }
	 ruleErrorSpecification
{ after(grammarAccess.getErrorSpecificationRule()); } 
	 EOF 
;

// Rule ErrorSpecification
ruleErrorSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getErrorSpecificationAccess().getGroup()); }
(rule__ErrorSpecification__Group__0)
{ after(grammarAccess.getErrorSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFailureError
entryRuleFailureError 
:
{ before(grammarAccess.getFailureErrorRule()); }
	 ruleFailureError
{ after(grammarAccess.getFailureErrorRule()); } 
	 EOF 
;

// Rule FailureError
ruleFailureError
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFailureErrorAccess().getGroup()); }
(rule__FailureError__Group__0)
{ after(grammarAccess.getFailureErrorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalError
entryRuleTerminalError 
:
{ before(grammarAccess.getTerminalErrorRule()); }
	 ruleTerminalError
{ after(grammarAccess.getTerminalErrorRule()); } 
	 EOF 
;

// Rule TerminalError
ruleTerminalError
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalErrorAccess().getAlternatives()); }
(rule__TerminalError__Alternatives)
{ after(grammarAccess.getTerminalErrorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypingStatement
entryRuleTypingStatement 
:
{ before(grammarAccess.getTypingStatementRule()); }
	 ruleTypingStatement
{ after(grammarAccess.getTypingStatementRule()); } 
	 EOF 
;

// Rule TypingStatement
ruleTypingStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypingStatementAccess().getGroup()); }
(rule__TypingStatement__Group__0)
{ after(grammarAccess.getTypingStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypingStatementExpression
entryRuleTypingStatementExpression 
:
{ before(grammarAccess.getTypingStatementExpressionRule()); }
	 ruleTypingStatementExpression
{ after(grammarAccess.getTypingStatementExpressionRule()); } 
	 EOF 
;

// Rule TypingStatementExpression
ruleTypingStatementExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypingStatementExpressionAccess().getExpressionParserRuleCall()); }
	ruleExpression
{ after(grammarAccess.getTypingStatementExpressionAccess().getExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnvironment
entryRuleEnvironment 
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
(rule__Environment__Group__0)
{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalEnvironment
entryRuleTerminalEnvironment 
:
{ before(grammarAccess.getTerminalEnvironmentRule()); }
	 ruleTerminalEnvironment
{ after(grammarAccess.getTerminalEnvironmentRule()); } 
	 EOF 
;

// Rule TerminalEnvironment
ruleTerminalEnvironment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalEnvironmentAccess().getAlternatives()); }
(rule__TerminalEnvironment__Alternatives)
{ after(grammarAccess.getTerminalEnvironmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnvironmentId
entryRuleEnvironmentId 
:
{ before(grammarAccess.getEnvironmentIdRule()); }
	 ruleEnvironmentId
{ after(grammarAccess.getEnvironmentIdRule()); } 
	 EOF 
;

// Rule EnvironmentId
ruleEnvironmentId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnvironmentIdAccess().getEnvironmentIdAssignment()); }
(rule__EnvironmentId__EnvironmentIdAssignment)
{ after(grammarAccess.getEnvironmentIdAccess().getEnvironmentIdAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnvironmentStatement
entryRuleEnvironmentStatement 
:
{ before(grammarAccess.getEnvironmentStatementRule()); }
	 ruleEnvironmentStatement
{ after(grammarAccess.getEnvironmentStatementRule()); } 
	 EOF 
;

// Rule EnvironmentStatement
ruleEnvironmentStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnvironmentStatementAccess().getGroup()); }
(rule__EnvironmentStatement__Group__0)
{ after(grammarAccess.getEnvironmentStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmptyEnvironment
entryRuleEmptyEnvironment 
:
{ before(grammarAccess.getEmptyEnvironmentRule()); }
	 ruleEmptyEnvironment
{ after(grammarAccess.getEmptyEnvironmentRule()); } 
	 EOF 
;

// Rule EmptyEnvironment
ruleEmptyEnvironment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmptyEnvironmentAccess().getEmptyAssignment()); }
(rule__EmptyEnvironment__EmptyAssignment)
{ after(grammarAccess.getEmptyEnvironmentAccess().getEmptyAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringConstant
entryRuleStringConstant 
:
{ before(grammarAccess.getStringConstantRule()); }
	 ruleStringConstant
{ after(grammarAccess.getStringConstantRule()); } 
	 EOF 
;

// Rule StringConstant
ruleStringConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConstantAccess().getValueAssignment()); }
(rule__StringConstant__ValueAssignment)
{ after(grammarAccess.getStringConstantAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerConstant
entryRuleIntegerConstant 
:
{ before(grammarAccess.getIntegerConstantRule()); }
	 ruleIntegerConstant
{ after(grammarAccess.getIntegerConstantRule()); } 
	 EOF 
;

// Rule IntegerConstant
ruleIntegerConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerConstantAccess().getValueAssignment()); }
(rule__IntegerConstant__ValueAssignment)
{ after(grammarAccess.getIntegerConstantAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableAccess
entryRuleVariableAccess 
:
{ before(grammarAccess.getVariableAccessRule()); }
	 ruleVariableAccess
{ after(grammarAccess.getVariableAccessRule()); } 
	 EOF 
;

// Rule VariableAccess
ruleVariableAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccessAccess().getAlternatives()); }
(rule__VariableAccess__Alternatives)
{ after(grammarAccess.getVariableAccessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup()); }
(rule__VariableReference__Group__0)
{ after(grammarAccess.getVariableReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedVariable
entryRuleIndexedVariable 
:
{ before(grammarAccess.getIndexedVariableRule()); }
	 ruleIndexedVariable
{ after(grammarAccess.getIndexedVariableRule()); } 
	 EOF 
;

// Rule IndexedVariable
ruleIndexedVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedVariableAccess().getGroup()); }
(rule__IndexedVariable__Group__0)
{ after(grammarAccess.getIndexedVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubExpression
entryRuleSubExpression 
:
{ before(grammarAccess.getSubExpressionRule()); }
	 ruleSubExpression
{ after(grammarAccess.getSubExpressionRule()); } 
	 EOF 
;

// Rule SubExpression
ruleSubExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubExpressionAccess().getAlternatives()); }
(rule__SubExpression__Alternatives)
{ after(grammarAccess.getSubExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayIndex
entryRuleArrayIndex 
:
{ before(grammarAccess.getArrayIndexRule()); }
	 ruleArrayIndex
{ after(grammarAccess.getArrayIndexRule()); } 
	 EOF 
;

// Rule ArrayIndex
ruleArrayIndex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayIndexAccess().getAlternatives()); }
(rule__ArrayIndex__Alternatives)
{ after(grammarAccess.getArrayIndexAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlternative
entryRuleAlternative 
:
{ before(grammarAccess.getAlternativeRule()); }
	 ruleAlternative
{ after(grammarAccess.getAlternativeRule()); } 
	 EOF 
;

// Rule Alternative
ruleAlternative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlternativeAccess().getVerticalLineKeyword()); }

	'|' 

{ after(grammarAccess.getAlternativeAccess().getVerticalLineKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrSeparator
entryRuleOrSeparator 
:
{ before(grammarAccess.getOrSeparatorRule()); }
	 ruleOrSeparator
{ after(grammarAccess.getOrSeparatorRule()); } 
	 EOF 
;

// Rule OrSeparator
ruleOrSeparator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrSeparatorAccess().getAlternatives()); }
(rule__OrSeparator__Alternatives)
{ after(grammarAccess.getOrSeparatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMappingRelation
entryRuleMappingRelation 
:
{ before(grammarAccess.getMappingRelationRule()); }
	 ruleMappingRelation
{ after(grammarAccess.getMappingRelationRule()); } 
	 EOF 
;

// Rule MappingRelation
ruleMappingRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappingRelationAccess().getHyphenMinusGreaterThanSignKeyword()); }

	'->' 

{ after(grammarAccess.getMappingRelationAccess().getHyphenMinusGreaterThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRelation
entryRuleTypeRelation 
:
{ before(grammarAccess.getTypeRelationRule()); }
	 ruleTypeRelation
{ after(grammarAccess.getTypeRelationRule()); } 
	 EOF 
;

// Rule TypeRelation
ruleTypeRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getTypeRelationAccess().getAlternatives()); }
(rule__TypeRelation__Alternatives)
{ after(grammarAccess.getTypeRelationAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getTypeRelationAccess().getAlternatives()); }
(rule__TypeRelation__Alternatives)*
{ after(grammarAccess.getTypeRelationAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeJudgmentSymbol
entryRuleTypeJudgmentSymbol 
:
{ before(grammarAccess.getTypeJudgmentSymbolRule()); }
	 ruleTypeJudgmentSymbol
{ after(grammarAccess.getTypeJudgmentSymbolRule()); } 
	 EOF 
;

// Rule TypeJudgmentSymbol
ruleTypeJudgmentSymbol
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeJudgmentSymbolAccess().getGroup()); }
(rule__TypeJudgmentSymbol__Group__0)
{ after(grammarAccess.getTypeJudgmentSymbolAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignOp
entryRuleAssignOp 
:
{ before(grammarAccess.getAssignOpRule()); }
	 ruleAssignOp
{ after(grammarAccess.getAssignOpRule()); } 
	 EOF 
;

// Rule AssignOp
ruleAssignOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignOpAccess().getColonEqualsSignKeyword()); }

	':=' 

{ after(grammarAccess.getAssignOpAccess().getColonEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualsOp
entryRuleEqualsOp 
:
{ before(grammarAccess.getEqualsOpRule()); }
	 ruleEqualsOp
{ after(grammarAccess.getEqualsOpRule()); } 
	 EOF 
;

// Rule EqualsOp
ruleEqualsOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualsOpAccess().getEqualsSignKeyword()); }

	'=' 

{ after(grammarAccess.getEqualsOpAccess().getEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusOp
entryRulePlusOp 
:
{ before(grammarAccess.getPlusOpRule()); }
	 rulePlusOp
{ after(grammarAccess.getPlusOpRule()); } 
	 EOF 
;

// Rule PlusOp
rulePlusOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlusOpAccess().getPlusSignKeyword()); }

	'+' 

{ after(grammarAccess.getPlusOpAccess().getPlusSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMinusOp
entryRuleMinusOp 
:
{ before(grammarAccess.getMinusOpRule()); }
	 ruleMinusOp
{ after(grammarAccess.getMinusOpRule()); } 
	 EOF 
;

// Rule MinusOp
ruleMinusOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMinusOpAccess().getHyphenMinusKeyword()); }

	'-' 

{ after(grammarAccess.getMinusOpAccess().getHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotEqualsOp
entryRuleNotEqualsOp 
:
{ before(grammarAccess.getNotEqualsOpRule()); }
	 ruleNotEqualsOp
{ after(grammarAccess.getNotEqualsOpRule()); } 
	 EOF 
;

// Rule NotEqualsOp
ruleNotEqualsOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotEqualsOpAccess().getExclamationMarkEqualsSignKeyword()); }

	'!=' 

{ after(grammarAccess.getNotEqualsOpAccess().getExclamationMarkEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComma
entryRuleComma 
:
{ before(grammarAccess.getCommaRule()); }
	 ruleComma
{ after(grammarAccess.getCommaRule()); } 
	 EOF 
;

// Rule Comma
ruleComma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommaAccess().getCommaKeyword()); }

	',' 

{ after(grammarAccess.getCommaAccess().getCommaKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListComposition
entryRuleListComposition 
:
{ before(grammarAccess.getListCompositionRule()); }
	 ruleListComposition
{ after(grammarAccess.getListCompositionRule()); } 
	 EOF 
;

// Rule ListComposition
ruleListComposition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListCompositionAccess().getGroup()); }
(rule__ListComposition__Group__0)
{ after(grammarAccess.getListCompositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColon
entryRuleColon 
:
{ before(grammarAccess.getColonRule()); }
	 ruleColon
{ after(grammarAccess.getColonRule()); } 
	 EOF 
;

// Rule Colon
ruleColon
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColonAccess().getColonKeyword()); }

	':' 

{ after(grammarAccess.getColonAccess().getColonKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnvironmentComposition
entryRuleEnvironmentComposition 
:
{ before(grammarAccess.getEnvironmentCompositionRule()); }
	 ruleEnvironmentComposition
{ after(grammarAccess.getEnvironmentCompositionRule()); } 
	 EOF 
;

// Rule EnvironmentComposition
ruleEnvironmentComposition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnvironmentCompositionAccess().getAlternatives()); }
(rule__EnvironmentComposition__Alternatives)
{ after(grammarAccess.getEnvironmentCompositionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Rule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getAxiomParserRuleCall_0()); }
	ruleAxiom
{ after(grammarAccess.getRuleAccess().getAxiomParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRuleAccess().getRuleWithPremisesParserRuleCall_1()); }
	ruleRuleWithPremises
{ after(grammarAccess.getRuleAccess().getRuleWithPremisesParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentAccess().getQuantificationParserRuleCall_0()); }
	ruleQuantification
{ after(grammarAccess.getTypingJudgmentAccess().getQuantificationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypingJudgmentAccess().getVariableDeclarationWithTypeParserRuleCall_1()); }
	ruleVariableDeclarationWithType
{ after(grammarAccess.getTypingJudgmentAccess().getVariableDeclarationWithTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypingJudgmentAccess().getOrTypingJudgmentParserRuleCall_2()); }
	ruleOrTypingJudgment
{ after(grammarAccess.getTypingJudgmentAccess().getOrTypingJudgmentParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypingJudgmentAccess().getStandardOperationParserRuleCall_3()); }
	ruleStandardOperation
{ after(grammarAccess.getTypingJudgmentAccess().getStandardOperationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypingJudgmentAccess().getTypingJudgmentWithEnvironmentParserRuleCall_4()); }
	ruleTypingJudgmentWithEnvironment
{ after(grammarAccess.getTypingJudgmentAccess().getTypingJudgmentWithEnvironmentParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTypeAccess().getCollectionTypeParserRuleCall_0()); }
	ruleCollectionType
{ after(grammarAccess.getExpressionTypeAccess().getCollectionTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionTypeAccess().getEClassifierTypeParserRuleCall_1()); }
	ruleEClassifierType
{ after(grammarAccess.getExpressionTypeAccess().getEClassifierTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionTypeAccess().getBasicTypeParserRuleCall_2()); }
	ruleBasicType
{ after(grammarAccess.getExpressionTypeAccess().getBasicTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__BasicAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getBasicStringKeyword_0_0()); }

	'String' 

{ after(grammarAccess.getBasicTypeAccess().getBasicStringKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getBasicIntegerKeyword_0_1()); }

	'Integer' 

{ after(grammarAccess.getBasicTypeAccess().getBasicIntegerKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getBasicObjectKeyword_0_2()); }

	'Object' 

{ after(grammarAccess.getBasicTypeAccess().getBasicObjectKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Quantification__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationAccess().getForEachParserRuleCall_0_0()); }
	ruleForEach
{ after(grammarAccess.getQuantificationAccess().getForEachParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getQuantificationAccess().getForAllParserRuleCall_0_1()); }
	ruleForAll
{ after(grammarAccess.getQuantificationAccess().getForAllParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getQuantificationAccess().getExistsParserRuleCall_0_2()); }
	ruleExists
{ after(grammarAccess.getQuantificationAccess().getExistsParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getEnvironmentOperationParserRuleCall_0()); }
	ruleEnvironmentOperation
{ after(grammarAccess.getStandardOperationAccess().getEnvironmentOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getListOperationParserRuleCall_1()); }
	ruleListOperation
{ after(grammarAccess.getStandardOperationAccess().getListOperationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getAssignmentParserRuleCall_2()); }
	ruleAssignment
{ after(grammarAccess.getStandardOperationAccess().getAssignmentParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getEqualsParserRuleCall_3()); }
	ruleEquals
{ after(grammarAccess.getStandardOperationAccess().getEqualsParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getFailParserRuleCall_4()); }
	ruleFail
{ after(grammarAccess.getStandardOperationAccess().getFailParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getSuccessParserRuleCall_5()); }
	ruleSuccess
{ after(grammarAccess.getStandardOperationAccess().getSuccessParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getGroup_0()); }
(rule__EnvironmentOperation__Group_0__0)
{ after(grammarAccess.getEnvironmentOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getEnvironmentOperationAccess().getGroup_1()); }
(rule__EnvironmentOperation__Group_1__0)
{ after(grammarAccess.getEnvironmentOperationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getEnvironmentOperationAccess().getGroup_2()); }
(rule__EnvironmentOperation__Group_2__0)
{ after(grammarAccess.getEnvironmentOperationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getGroup_0()); }
(rule__ListOperation__Group_0__0)
{ after(grammarAccess.getListOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getListOperationAccess().getGroup_1()); }
(rule__ListOperation__Group_1__0)
{ after(grammarAccess.getListOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__OpAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getOpEqualsOpParserRuleCall_1_0_0()); }
	ruleEqualsOp
{ after(grammarAccess.getEqualsAccess().getOpEqualsOpParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getEqualsAccess().getOpNotEqualsOpParserRuleCall_1_0_1()); }
	ruleNotEqualsOp
{ after(grammarAccess.getEqualsAccess().getOpNotEqualsOpParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalError__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalErrorAccess().getGroup_0()); }
(rule__TerminalError__Group_0__0)
{ after(grammarAccess.getTerminalErrorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalErrorAccess().getGroup_1()); }
(rule__TerminalError__Group_1__0)
{ after(grammarAccess.getTerminalErrorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalEnvironment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalEnvironmentAccess().getEnvironmentIdParserRuleCall_0()); }
	ruleEnvironmentId
{ after(grammarAccess.getTerminalEnvironmentAccess().getEnvironmentIdParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalEnvironmentAccess().getEnvironmentStatementParserRuleCall_1()); }
	ruleEnvironmentStatement
{ after(grammarAccess.getTerminalEnvironmentAccess().getEnvironmentStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminalEnvironmentAccess().getEmptyEnvironmentParserRuleCall_2()); }
	ruleEmptyEnvironment
{ after(grammarAccess.getTerminalEnvironmentAccess().getEmptyEnvironmentParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVariableDeclarationWithTypeParserRuleCall_0()); }
	ruleVariableDeclarationWithType
{ after(grammarAccess.getExpressionAccess().getVariableDeclarationWithTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2()); }
(rule__Expression__Group_2__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_3()); }
(rule__Expression__Group_3__0)
{ after(grammarAccess.getExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_4()); }
(rule__Expression__Group_4__0)
{ after(grammarAccess.getExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_5()); }
(rule__Expression__Group_5__0)
{ after(grammarAccess.getExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_6()); }
(rule__Expression__Group_6__0)
{ after(grammarAccess.getExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_7()); }
(rule__Expression__Group_7__0)
{ after(grammarAccess.getExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_8()); }
(rule__Expression__Group_8__0)
{ after(grammarAccess.getExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_9()); }
(rule__Expression__Group_9__0)
{ after(grammarAccess.getExpressionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getStringConstantParserRuleCall_0()); }
	ruleStringConstant
{ after(grammarAccess.getTerminalExpressionAccess().getStringConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getIntegerConstantParserRuleCall_1()); }
	ruleIntegerConstant
{ after(grammarAccess.getTerminalExpressionAccess().getIntegerConstantParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getVariableAccessParserRuleCall_2()); }
	ruleVariableAccess
{ after(grammarAccess.getTerminalExpressionAccess().getVariableAccessParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getVariableReferenceParserRuleCall_0()); }
	ruleVariableReference
{ after(grammarAccess.getVariableAccessAccess().getVariableReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccessAccess().getIndexedVariableParserRuleCall_1()); }
	ruleIndexedVariable
{ after(grammarAccess.getVariableAccessAccess().getIndexedVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_0()); }
(rule__SubExpression__Group_0__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1()); }
(rule__SubExpression__Group_1__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayIndexAccess().getIntegerConstantParserRuleCall_0()); }
	ruleIntegerConstant
{ after(grammarAccess.getArrayIndexAccess().getIntegerConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getArrayIndexAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getArrayIndexAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrSeparator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrSeparatorAccess().getAlternativeParserRuleCall_0()); }
	ruleAlternative
{ after(grammarAccess.getOrSeparatorAccess().getAlternativeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOrSeparatorAccess().getOrKeyword_1()); }

	'or' 

{ after(grammarAccess.getOrSeparatorAccess().getOrKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRelation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRelationAccess().getAssignOpParserRuleCall_0()); }
	ruleAssignOp
{ after(grammarAccess.getTypeRelationAccess().getAssignOpParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeRelationAccess().getEqualsOpParserRuleCall_1()); }
	ruleEqualsOp
{ after(grammarAccess.getTypeRelationAccess().getEqualsOpParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeRelationAccess().getLessThanSignKeyword_2()); }

	'<' 

{ after(grammarAccess.getTypeRelationAccess().getLessThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getTypeRelationAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getTypeRelationAccess().getGreaterThanSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getTypeRelationAccess().getExclamationMarkKeyword_4()); }

	'!' 

{ after(grammarAccess.getTypeRelationAccess().getExclamationMarkKeyword_4()); }
)

    |(
{ before(grammarAccess.getTypeRelationAccess().getHyphenMinusKeyword_5()); }

	'-' 

{ after(grammarAccess.getTypeRelationAccess().getHyphenMinusKeyword_5()); }
)

    |(
{ before(grammarAccess.getTypeRelationAccess().getColonParserRuleCall_6()); }
	ruleColon
{ after(grammarAccess.getTypeRelationAccess().getColonParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getTypeRelationAccess().getTildeKeyword_7()); }

	'~' 

{ after(grammarAccess.getTypeRelationAccess().getTildeKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentComposition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentCompositionAccess().getCommaParserRuleCall_0()); }
	ruleComma
{ after(grammarAccess.getEnvironmentCompositionAccess().getCommaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEnvironmentCompositionAccess().getListCompositionParserRuleCall_1()); }
	ruleListComposition
{ after(grammarAccess.getEnvironmentCompositionAccess().getListCompositionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TypeSystemDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group__0__Impl
	rule__TypeSystemDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getGroup_0()); }
(rule__TypeSystemDefinition__Group_0__0)?
{ after(grammarAccess.getTypeSystemDefinitionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group__1__Impl
	rule__TypeSystemDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getGrammarKeyword_1()); }

	'grammar' 

{ after(grammarAccess.getTypeSystemDefinitionAccess().getGrammarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group__2__Impl
	rule__TypeSystemDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getEPackageAssignment_2()); }
(rule__TypeSystemDefinition__EPackageAssignment_2)
{ after(grammarAccess.getTypeSystemDefinitionAccess().getEPackageAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group__3__Impl
	rule__TypeSystemDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getGroup_3()); }
(rule__TypeSystemDefinition__Group_3__0)?
{ after(grammarAccess.getTypeSystemDefinitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group__4__Impl
	rule__TypeSystemDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getGroup_4()); }
(rule__TypeSystemDefinition__Group_4__0)?
{ after(grammarAccess.getTypeSystemDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getRulesAssignment_5()); }
(rule__TypeSystemDefinition__RulesAssignment_5)*
{ after(grammarAccess.getTypeSystemDefinitionAccess().getRulesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeSystemDefinition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group_0__0__Impl
	rule__TypeSystemDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getTypesystemKeyword_0_0()); }

	'typesystem' 

{ after(grammarAccess.getTypeSystemDefinitionAccess().getTypesystemKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getNameAssignment_0_1()); }
(rule__TypeSystemDefinition__NameAssignment_0_1)
{ after(grammarAccess.getTypeSystemDefinitionAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSystemDefinition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group_3__0__Impl
	rule__TypeSystemDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getGenmodelKeyword_3_0()); }

	'genmodel' 

{ after(grammarAccess.getTypeSystemDefinitionAccess().getGenmodelKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getGenModelAssignment_3_1()); }
(rule__TypeSystemDefinition__GenModelAssignment_3_1)
{ after(grammarAccess.getTypeSystemDefinitionAccess().getGenModelAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSystemDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group_4__0__Impl
	rule__TypeSystemDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getJudgmentsKeyword_4_0()); }

	'judgments' 

{ after(grammarAccess.getTypeSystemDefinitionAccess().getJudgmentsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group_4__1__Impl
	rule__TypeSystemDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getJudgmentDescriptionsAssignment_4_1()); }
(rule__TypeSystemDefinition__JudgmentDescriptionsAssignment_4_1)
{ after(grammarAccess.getTypeSystemDefinitionAccess().getJudgmentDescriptionsAssignment_4_1()); }
)
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getJudgmentDescriptionsAssignment_4_1()); }
(rule__TypeSystemDefinition__JudgmentDescriptionsAssignment_4_1)*
{ after(grammarAccess.getTypeSystemDefinitionAccess().getJudgmentDescriptionsAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystemDefinition__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSystemDefinition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getEndKeyword_4_2()); }

	'end' 

{ after(grammarAccess.getTypeSystemDefinitionAccess().getEndKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JudgmentDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group__0__Impl
	rule__JudgmentDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getJudgmentsymbolAssignment_0()); }
(rule__JudgmentDescription__JudgmentsymbolAssignment_0)
{ after(grammarAccess.getJudgmentDescriptionAccess().getJudgmentsymbolAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group__1__Impl
	rule__JudgmentDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getRelationAssignment_1()); }
(rule__JudgmentDescription__RelationAssignment_1)
{ after(grammarAccess.getJudgmentDescriptionAccess().getRelationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group__2__Impl
	rule__JudgmentDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getKindKeyword_2()); }

	'kind' 

{ after(grammarAccess.getJudgmentDescriptionAccess().getKindKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group__3__Impl
	rule__JudgmentDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getEqualsOpParserRuleCall_3()); }
	ruleEqualsOp
{ after(grammarAccess.getJudgmentDescriptionAccess().getEqualsOpParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group__4__Impl
	rule__JudgmentDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getKindAssignment_4()); }
(rule__JudgmentDescription__KindAssignment_4)
{ after(grammarAccess.getJudgmentDescriptionAccess().getKindAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5()); }
(rule__JudgmentDescription__UnorderedGroup_5)
{ after(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__JudgmentDescription__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_0__0__Impl
	rule__JudgmentDescription__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getSuccessKeyword_5_0_0()); }

	'success' 

{ after(grammarAccess.getJudgmentDescriptionAccess().getSuccessKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_0__1__Impl
	rule__JudgmentDescription__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getEqualsOpParserRuleCall_5_0_1()); }
	ruleEqualsOp
{ after(grammarAccess.getJudgmentDescriptionAccess().getEqualsOpParserRuleCall_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getSuccessAssignment_5_0_2()); }
(rule__JudgmentDescription__SuccessAssignment_5_0_2)
{ after(grammarAccess.getJudgmentDescriptionAccess().getSuccessAssignment_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JudgmentDescription__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_1__0__Impl
	rule__JudgmentDescription__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getFailKeyword_5_1_0()); }

	'fail' 

{ after(grammarAccess.getJudgmentDescriptionAccess().getFailKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_1__1__Impl
	rule__JudgmentDescription__Group_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getEqualsOpParserRuleCall_5_1_1()); }
	ruleEqualsOp
{ after(grammarAccess.getJudgmentDescriptionAccess().getEqualsOpParserRuleCall_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getFailAssignment_5_1_2()); }
(rule__JudgmentDescription__FailAssignment_5_1_2)
{ after(grammarAccess.getJudgmentDescriptionAccess().getFailAssignment_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JudgmentDescription__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_2__0__Impl
	rule__JudgmentDescription__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getNomatchKeyword_5_2_0()); }

	'nomatch' 

{ after(grammarAccess.getJudgmentDescriptionAccess().getNomatchKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_2__1__Impl
	rule__JudgmentDescription__Group_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getEqualsOpParserRuleCall_5_2_1()); }
	ruleEqualsOp
{ after(grammarAccess.getJudgmentDescriptionAccess().getEqualsOpParserRuleCall_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__Group_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__Group_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__Group_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getNomatchAssignment_5_2_2()); }
(rule__JudgmentDescription__NomatchAssignment_5_2_2)
{ after(grammarAccess.getJudgmentDescriptionAccess().getNomatchAssignment_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Axiom__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Axiom__Group__0__Impl
	rule__Axiom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAxiomAccess().getAxiomKeyword_0()); }

	'axiom' 

{ after(grammarAccess.getAxiomAccess().getAxiomKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Axiom__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Axiom__Group__1__Impl
	rule__Axiom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAxiomAccess().getNameAssignment_1()); }
(rule__Axiom__NameAssignment_1)
{ after(grammarAccess.getAxiomAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Axiom__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Axiom__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAxiomAccess().getTypejudgmentAssignment_2()); }
(rule__Axiom__TypejudgmentAssignment_2)
{ after(grammarAccess.getAxiomAccess().getTypejudgmentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RuleWithPremises__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleWithPremises__Group__0__Impl
	rule__RuleWithPremises__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getRuleWithPremisesAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleWithPremises__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleWithPremises__Group__1__Impl
	rule__RuleWithPremises__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getNameAssignment_1()); }
(rule__RuleWithPremises__NameAssignment_1)
{ after(grammarAccess.getRuleWithPremisesAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleWithPremises__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleWithPremises__Group__2__Impl
	rule__RuleWithPremises__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getDerivesKeyword_2()); }

	'derives' 

{ after(grammarAccess.getRuleWithPremisesAccess().getDerivesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleWithPremises__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleWithPremises__Group__3__Impl
	rule__RuleWithPremises__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getTypejudgmentAssignment_3()); }
(rule__RuleWithPremises__TypejudgmentAssignment_3)
{ after(grammarAccess.getRuleWithPremisesAccess().getTypejudgmentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleWithPremises__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleWithPremises__Group__4__Impl
	rule__RuleWithPremises__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getFromKeyword_4()); }

	'from' 

{ after(grammarAccess.getRuleWithPremisesAccess().getFromKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleWithPremises__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleWithPremises__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRuleWithPremisesAccess().getPremisesAssignment_5()); }
(rule__RuleWithPremises__PremisesAssignment_5)
{ after(grammarAccess.getRuleWithPremisesAccess().getPremisesAssignment_5()); }
)
(
{ before(grammarAccess.getRuleWithPremisesAccess().getPremisesAssignment_5()); }
(rule__RuleWithPremises__PremisesAssignment_5)*
{ after(grammarAccess.getRuleWithPremisesAccess().getPremisesAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OrTypingJudgment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTypingJudgment__Group__0__Impl
	rule__OrTypingJudgment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getOrTypingJudgmentAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrTypingJudgment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTypingJudgment__Group__1__Impl
	rule__OrTypingJudgment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getBranchesAssignment_1()); }
(rule__OrTypingJudgment__BranchesAssignment_1)
{ after(grammarAccess.getOrTypingJudgmentAccess().getBranchesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrTypingJudgment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTypingJudgment__Group__2__Impl
	rule__OrTypingJudgment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getGroup_2()); }
(rule__OrTypingJudgment__Group_2__0)
{ after(grammarAccess.getOrTypingJudgmentAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getGroup_2()); }
(rule__OrTypingJudgment__Group_2__0)*
{ after(grammarAccess.getOrTypingJudgmentAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrTypingJudgment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTypingJudgment__Group__3__Impl
	rule__OrTypingJudgment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getOrTypingJudgmentAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrTypingJudgment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTypingJudgment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getErrorAssignment_4()); }
(rule__OrTypingJudgment__ErrorAssignment_4)?
{ after(grammarAccess.getOrTypingJudgmentAccess().getErrorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OrTypingJudgment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTypingJudgment__Group_2__0__Impl
	rule__OrTypingJudgment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getOrSeparatorParserRuleCall_2_0()); }
	ruleOrSeparator
{ after(grammarAccess.getOrTypingJudgmentAccess().getOrSeparatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrTypingJudgment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrTypingJudgment__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getBranchesAssignment_2_1()); }
(rule__OrTypingJudgment__BranchesAssignment_2_1)
{ after(grammarAccess.getOrTypingJudgmentAccess().getBranchesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationWithType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWithType__Group__0__Impl
	rule__VariableDeclarationWithType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWithType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWithType__Group__1__Impl
	rule__VariableDeclarationWithType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getExpressionTypeAssignment_1()); }
(rule__VariableDeclarationWithType__ExpressionTypeAssignment_1)
{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getExpressionTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWithType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWithType__Group__2__Impl
	rule__VariableDeclarationWithType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getNameAssignment_2()); }
(rule__VariableDeclarationWithType__NameAssignment_2)
{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWithType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWithType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getGroup_3()); }
(rule__VariableDeclarationWithType__Group_3__0)?
{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclarationWithType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWithType__Group_3__0__Impl
	rule__VariableDeclarationWithType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getOpAssignment_3_0()); }
(rule__VariableDeclarationWithType__OpAssignment_3_0)
{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getOpAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWithType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWithType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getRightAssignment_3_1()); }
(rule__VariableDeclarationWithType__RightAssignment_3_1)
{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getRightAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__0__Impl
	rule__CollectionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getCollectionAssignment_0()); }
(rule__CollectionType__CollectionAssignment_0)
{ after(grammarAccess.getCollectionTypeAccess().getCollectionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__1__Impl
	rule__CollectionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getCollectionTypeAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__2__Impl
	rule__CollectionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getTypeAssignment_2()); }
(rule__CollectionType__TypeAssignment_2)
{ after(grammarAccess.getCollectionTypeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getCollectionTypeAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Quantification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Quantification__Group__0__Impl
	rule__Quantification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationAccess().getAlternatives_0()); }
(rule__Quantification__Alternatives_0)
{ after(grammarAccess.getQuantificationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Quantification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Quantification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationAccess().getErrorAssignment_1()); }
(rule__Quantification__ErrorAssignment_1)?
{ after(grammarAccess.getQuantificationAccess().getErrorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForEach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEach__Group__0__Impl
	rule__ForEach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getForeachKeyword_0()); }

	'foreach' 

{ after(grammarAccess.getForEachAccess().getForeachKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEach__Group__1__Impl
	rule__ForEach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getExpressionAssignment_1()); }
(rule__ForEach__ExpressionAssignment_1)
{ after(grammarAccess.getForEachAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEach__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEach__Group__2__Impl
	rule__ForEach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getForEachAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEach__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEach__Group__3__Impl
	rule__ForEach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getVariableAssignment_3()); }
(rule__ForEach__VariableAssignment_3)
{ after(grammarAccess.getForEachAccess().getVariableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEach__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEach__Group__4__Impl
	rule__ForEach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getForEachAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEach__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEach__Group__5__Impl
	rule__ForEach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getForEachAccess().getJudgmentsAssignment_5()); }
(rule__ForEach__JudgmentsAssignment_5)
{ after(grammarAccess.getForEachAccess().getJudgmentsAssignment_5()); }
)
(
{ before(grammarAccess.getForEachAccess().getJudgmentsAssignment_5()); }
(rule__ForEach__JudgmentsAssignment_5)*
{ after(grammarAccess.getForEachAccess().getJudgmentsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEach__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getForEachAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ForAll__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAll__Group__0__Impl
	rule__ForAll__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getForallKeyword_0()); }

	'forall' 

{ after(grammarAccess.getForAllAccess().getForallKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAll__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAll__Group__1__Impl
	rule__ForAll__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getVariableAssignment_1()); }
(rule__ForAll__VariableAssignment_1)
{ after(grammarAccess.getForAllAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAll__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAll__Group__2__Impl
	rule__ForAll__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getForAllAccess().getInKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAll__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAll__Group__3__Impl
	rule__ForAll__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getExpressionAssignment_3()); }
(rule__ForAll__ExpressionAssignment_3)
{ after(grammarAccess.getForAllAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAll__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAll__Group__4__Impl
	rule__ForAll__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getForAllAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAll__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAll__Group__5__Impl
	rule__ForAll__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getForAllAccess().getJudgmentsAssignment_5()); }
(rule__ForAll__JudgmentsAssignment_5)
{ after(grammarAccess.getForAllAccess().getJudgmentsAssignment_5()); }
)
(
{ before(grammarAccess.getForAllAccess().getJudgmentsAssignment_5()); }
(rule__ForAll__JudgmentsAssignment_5)*
{ after(grammarAccess.getForAllAccess().getJudgmentsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAll__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAll__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getForAllAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Exists__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__0__Impl
	rule__Exists__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getNotAssignment_0()); }
(rule__Exists__NotAssignment_0)?
{ after(grammarAccess.getExistsAccess().getNotAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__1__Impl
	rule__Exists__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getExistsKeyword_1()); }

	'exists' 

{ after(grammarAccess.getExistsAccess().getExistsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__2__Impl
	rule__Exists__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getVariableAssignment_2()); }
(rule__Exists__VariableAssignment_2)
{ after(grammarAccess.getExistsAccess().getVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__3__Impl
	rule__Exists__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getInKeyword_3()); }

	'in' 

{ after(grammarAccess.getExistsAccess().getInKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__4__Impl
	rule__Exists__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getExpressionAssignment_4()); }
(rule__Exists__ExpressionAssignment_4)
{ after(grammarAccess.getExistsAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__5__Impl
	rule__Exists__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getExistsAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__6__Impl
	rule__Exists__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExistsAccess().getJudgmentsAssignment_6()); }
(rule__Exists__JudgmentsAssignment_6)
{ after(grammarAccess.getExistsAccess().getJudgmentsAssignment_6()); }
)
(
{ before(grammarAccess.getExistsAccess().getJudgmentsAssignment_6()); }
(rule__Exists__JudgmentsAssignment_6)*
{ after(grammarAccess.getExistsAccess().getJudgmentsAssignment_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getExistsAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__EnvironmentOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_0__0__Impl
	rule__EnvironmentOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getEnvironmentAssignmentAction_0_0()); }
(

)
{ after(grammarAccess.getEnvironmentOperationAccess().getEnvironmentAssignmentAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_0__1__Impl
	rule__EnvironmentOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getLeftAssignment_0_1()); }
(rule__EnvironmentOperation__LeftAssignment_0_1)
{ after(grammarAccess.getEnvironmentOperationAccess().getLeftAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_0__2__Impl
	rule__EnvironmentOperation__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getAssignOpParserRuleCall_0_2()); }
	ruleAssignOp
{ after(grammarAccess.getEnvironmentOperationAccess().getAssignOpParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getRightAssignment_0_3()); }
(rule__EnvironmentOperation__RightAssignment_0_3)
{ after(grammarAccess.getEnvironmentOperationAccess().getRightAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnvironmentOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_1__0__Impl
	rule__EnvironmentOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getEnvironmentIncrementAction_1_0()); }
(

)
{ after(grammarAccess.getEnvironmentOperationAccess().getEnvironmentIncrementAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_1__1__Impl
	rule__EnvironmentOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getLeftAssignment_1_1()); }
(rule__EnvironmentOperation__LeftAssignment_1_1)
{ after(grammarAccess.getEnvironmentOperationAccess().getLeftAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_1__2__Impl
	rule__EnvironmentOperation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getPlusOpParserRuleCall_1_2()); }
	rulePlusOp
{ after(grammarAccess.getEnvironmentOperationAccess().getPlusOpParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_1__3__Impl
	rule__EnvironmentOperation__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getEqualsOpParserRuleCall_1_3()); }
	ruleEqualsOp
{ after(grammarAccess.getEnvironmentOperationAccess().getEqualsOpParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getRightAssignment_1_4()); }
(rule__EnvironmentOperation__RightAssignment_1_4)
{ after(grammarAccess.getEnvironmentOperationAccess().getRightAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnvironmentOperation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_2__0__Impl
	rule__EnvironmentOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getEnvironmentDecrementAction_2_0()); }
(

)
{ after(grammarAccess.getEnvironmentOperationAccess().getEnvironmentDecrementAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_2__1__Impl
	rule__EnvironmentOperation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getLeftAssignment_2_1()); }
(rule__EnvironmentOperation__LeftAssignment_2_1)
{ after(grammarAccess.getEnvironmentOperationAccess().getLeftAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_2__2__Impl
	rule__EnvironmentOperation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getMinusOpParserRuleCall_2_2()); }
	ruleMinusOp
{ after(grammarAccess.getEnvironmentOperationAccess().getMinusOpParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_2__3__Impl
	rule__EnvironmentOperation__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getEqualsOpParserRuleCall_2_3()); }
	ruleEqualsOp
{ after(grammarAccess.getEnvironmentOperationAccess().getEqualsOpParserRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentOperation__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentOperation__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getRightAssignment_2_4()); }
(rule__EnvironmentOperation__RightAssignment_2_4)
{ after(grammarAccess.getEnvironmentOperationAccess().getRightAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ListOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_0__0__Impl
	rule__ListOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getListIncrementAction_0_0()); }
(

)
{ after(grammarAccess.getListOperationAccess().getListIncrementAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_0__1__Impl
	rule__ListOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getLeftAssignment_0_1()); }
(rule__ListOperation__LeftAssignment_0_1)
{ after(grammarAccess.getListOperationAccess().getLeftAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_0__2__Impl
	rule__ListOperation__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getPlusOpParserRuleCall_0_2()); }
	rulePlusOp
{ after(grammarAccess.getListOperationAccess().getPlusOpParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOperation__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_0__3__Impl
	rule__ListOperation__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getEqualsOpParserRuleCall_0_3()); }
	ruleEqualsOp
{ after(grammarAccess.getListOperationAccess().getEqualsOpParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOperation__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getRightAssignment_0_4()); }
(rule__ListOperation__RightAssignment_0_4)
{ after(grammarAccess.getListOperationAccess().getRightAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ListOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_1__0__Impl
	rule__ListOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getListDecrementAction_1_0()); }
(

)
{ after(grammarAccess.getListOperationAccess().getListDecrementAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_1__1__Impl
	rule__ListOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getLeftAssignment_1_1()); }
(rule__ListOperation__LeftAssignment_1_1)
{ after(grammarAccess.getListOperationAccess().getLeftAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_1__2__Impl
	rule__ListOperation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getMinusOpParserRuleCall_1_2()); }
	ruleMinusOp
{ after(grammarAccess.getListOperationAccess().getMinusOpParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOperation__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_1__3__Impl
	rule__ListOperation__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getEqualsOpParserRuleCall_1_3()); }
	ruleEqualsOp
{ after(grammarAccess.getListOperationAccess().getEqualsOpParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListOperation__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListOperation__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getRightAssignment_1_4()); }
(rule__ListOperation__RightAssignment_1_4)
{ after(grammarAccess.getListOperationAccess().getRightAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftAssignment_0()); }
(rule__Assignment__LeftAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAssignOpParserRuleCall_1()); }
	ruleAssignOp
{ after(grammarAccess.getAssignmentAccess().getAssignOpParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightAssignment_2()); }
(rule__Assignment__RightAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Equals__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equals__Group__0__Impl
	rule__Equals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getLeftAssignment_0()); }
(rule__Equals__LeftAssignment_0)
{ after(grammarAccess.getEqualsAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equals__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equals__Group__1__Impl
	rule__Equals__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getOpAssignment_1()); }
(rule__Equals__OpAssignment_1)
{ after(grammarAccess.getEqualsAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equals__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equals__Group__2__Impl
	rule__Equals__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getRightAssignment_2()); }
(rule__Equals__RightAssignment_2)
{ after(grammarAccess.getEqualsAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equals__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equals__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getErrorAssignment_3()); }
(rule__Equals__ErrorAssignment_3)?
{ after(grammarAccess.getEqualsAccess().getErrorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Fail__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fail__Group__0__Impl
	rule__Fail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailAccess().getFailAction_0()); }
(

)
{ after(grammarAccess.getFailAccess().getFailAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fail__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fail__Group__1__Impl
	rule__Fail__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailAccess().getFailKeyword_1()); }

	'fail' 

{ after(grammarAccess.getFailAccess().getFailKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fail__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fail__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailAccess().getErrorAssignment_2()); }
(rule__Fail__ErrorAssignment_2)?
{ after(grammarAccess.getFailAccess().getErrorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Success__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Success__Group__0__Impl
	rule__Success__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuccessAccess().getSuccessAction_0()); }
(

)
{ after(grammarAccess.getSuccessAccess().getSuccessAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Success__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Success__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuccessAccess().getSuccessKeyword_1()); }

	'success' 

{ after(grammarAccess.getSuccessAccess().getSuccessKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypingJudgmentWithEnvironment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingJudgmentWithEnvironment__Group__0__Impl
	rule__TypingJudgmentWithEnvironment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgmentWithEnvironment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getEnvironmentAssignment_0()); }
(rule__TypingJudgmentWithEnvironment__EnvironmentAssignment_0)
{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getEnvironmentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypingJudgmentWithEnvironment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingJudgmentWithEnvironment__Group__1__Impl
	rule__TypingJudgmentWithEnvironment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgmentWithEnvironment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getTypejudgmentsymbolAssignment_1()); }
(rule__TypingJudgmentWithEnvironment__TypejudgmentsymbolAssignment_1)
{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getTypejudgmentsymbolAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypingJudgmentWithEnvironment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingJudgmentWithEnvironment__Group__2__Impl
	rule__TypingJudgmentWithEnvironment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgmentWithEnvironment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getTypingstatementAssignment_2()); }
(rule__TypingJudgmentWithEnvironment__TypingstatementAssignment_2)
{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getTypingstatementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypingJudgmentWithEnvironment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingJudgmentWithEnvironment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgmentWithEnvironment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getErrorAssignment_3()); }
(rule__TypingJudgmentWithEnvironment__ErrorAssignment_3)?
{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getErrorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ErrorSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorSpecification__Group__0__Impl
	rule__ErrorSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorSpecificationAccess().getErrorKeyword_0()); }

	'error' 

{ after(grammarAccess.getErrorSpecificationAccess().getErrorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorSpecification__Group__1__Impl
	rule__ErrorSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorSpecificationAccess().getEqualsOpParserRuleCall_1()); }
	ruleEqualsOp
{ after(grammarAccess.getErrorSpecificationAccess().getEqualsOpParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorSpecification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorSpecificationAccess().getFailureErrorAssignment_2()); }
(rule__ErrorSpecification__FailureErrorAssignment_2)
{ after(grammarAccess.getErrorSpecificationAccess().getFailureErrorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FailureError__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailureError__Group__0__Impl
	rule__FailureError__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureError__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailureErrorAccess().getTerminalErrorParserRuleCall_0()); }
	ruleTerminalError
{ after(grammarAccess.getFailureErrorAccess().getTerminalErrorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FailureError__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailureError__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureError__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailureErrorAccess().getGroup_1()); }
(rule__FailureError__Group_1__0)*
{ after(grammarAccess.getFailureErrorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FailureError__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailureError__Group_1__0__Impl
	rule__FailureError__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureError__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailureErrorAccess().getComposedErrorLeftAction_1_0()); }
(

)
{ after(grammarAccess.getFailureErrorAccess().getComposedErrorLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FailureError__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailureError__Group_1__1__Impl
	rule__FailureError__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureError__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailureErrorAccess().getOpAssignment_1_1()); }
(rule__FailureError__OpAssignment_1_1)
{ after(grammarAccess.getFailureErrorAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FailureError__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailureError__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureError__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailureErrorAccess().getRightAssignment_1_2()); }
(rule__FailureError__RightAssignment_1_2)
{ after(grammarAccess.getFailureErrorAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalError__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalError__Group_0__0__Impl
	rule__TerminalError__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalError__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalErrorAccess().getErrorStringAction_0_0()); }
(

)
{ after(grammarAccess.getTerminalErrorAccess().getErrorStringAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalError__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalError__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalError__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalErrorAccess().getErrStringAssignment_0_1()); }
(rule__TerminalError__ErrStringAssignment_0_1)
{ after(grammarAccess.getTerminalErrorAccess().getErrStringAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalError__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalError__Group_1__0__Impl
	rule__TerminalError__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalError__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalErrorAccess().getErrorExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalErrorAccess().getErrorExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalError__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalError__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalError__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalErrorAccess().getExpressionAssignment_1_1()); }
(rule__TerminalError__ExpressionAssignment_1_1)
{ after(grammarAccess.getTerminalErrorAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypingStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingStatement__Group__0__Impl
	rule__TypingStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStatementAccess().getLeftAssignment_0()); }
(rule__TypingStatement__LeftAssignment_0)
{ after(grammarAccess.getTypingStatementAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypingStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingStatement__Group__1__Impl
	rule__TypingStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStatementAccess().getRelationAssignment_1()); }
(rule__TypingStatement__RelationAssignment_1)
{ after(grammarAccess.getTypingStatementAccess().getRelationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypingStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStatementAccess().getRightAssignment_2()); }
(rule__TypingStatement__RightAssignment_2)
{ after(grammarAccess.getTypingStatementAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Environment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getTerminalEnvironmentParserRuleCall_0()); }
	ruleTerminalEnvironment
{ after(grammarAccess.getEnvironmentAccess().getTerminalEnvironmentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getGroup_1()); }
(rule__Environment__Group_1__0)*
{ after(grammarAccess.getEnvironmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Environment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group_1__0__Impl
	rule__Environment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getEnvironmentCompositionCurrentEnvironmentAction_1_0()); }
(

)
{ after(grammarAccess.getEnvironmentAccess().getEnvironmentCompositionCurrentEnvironmentAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group_1__1__Impl
	rule__Environment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getOpAssignment_1_1()); }
(rule__Environment__OpAssignment_1_1)
{ after(grammarAccess.getEnvironmentAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getSubEnvironmentAssignment_1_2()); }
(rule__Environment__SubEnvironmentAssignment_1_2)
{ after(grammarAccess.getEnvironmentAccess().getSubEnvironmentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnvironmentStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentStatement__Group__0__Impl
	rule__EnvironmentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentStatementAccess().getLeftAssignment_0()); }
(rule__EnvironmentStatement__LeftAssignment_0)
{ after(grammarAccess.getEnvironmentStatementAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentStatement__Group__1__Impl
	rule__EnvironmentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentStatementAccess().getRelationAssignment_1()); }
(rule__EnvironmentStatement__RelationAssignment_1)
{ after(grammarAccess.getEnvironmentStatementAccess().getRelationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnvironmentStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentStatementAccess().getRightAssignment_2()); }
(rule__EnvironmentStatement__RightAssignment_2)
{ after(grammarAccess.getEnvironmentStatementAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getEnvironmentAccessAction_1_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getEnvironmentAccessAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getEnvKeyword_1_1()); }

	'env' 

{ after(grammarAccess.getExpressionAccess().getEnvKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__2__Impl
	rule__Expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_2()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__3__Impl
	rule__Expression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getEnvIdAssignment_1_3()); }
(rule__Expression__EnvIdAssignment_1_3)
{ after(grammarAccess.getExpressionAccess().getEnvIdAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__4__Impl
	rule__Expression__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCommaKeyword_1_4()); }

	',' 

{ after(grammarAccess.getExpressionAccess().getCommaKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__5__Impl
	rule__Expression__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentAssignment_1_5()); }
(rule__Expression__ArgumentAssignment_1_5)
{ after(grammarAccess.getExpressionAccess().getArgumentAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_6()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Expression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__0__Impl
	rule__Expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLengthAction_2_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getLengthAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__1__Impl
	rule__Expression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLenKeyword_2_1()); }

	'len' 

{ after(grammarAccess.getExpressionAccess().getLenKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__2__Impl
	rule__Expression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_2_2()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__3__Impl
	rule__Expression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentAssignment_2_3()); }
(rule__Expression__ArgumentAssignment_2_3)
{ after(grammarAccess.getExpressionAccess().getArgumentAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_2_4()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__0__Impl
	rule__Expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGetAllAction_3_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getGetAllAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__1__Impl
	rule__Expression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGetallKeyword_3_1()); }

	'getall' 

{ after(grammarAccess.getExpressionAccess().getGetallKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__2__Impl
	rule__Expression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_3_2()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__3__Impl
	rule__Expression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionAssignment_3_3()); }
(rule__Expression__ExpressionAssignment_3_3)
{ after(grammarAccess.getExpressionAccess().getExpressionAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__4__Impl
	rule__Expression__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCommaKeyword_3_4()); }

	',' 

{ after(grammarAccess.getExpressionAccess().getCommaKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__5__Impl
	rule__Expression__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getMainfeatureAssignment_3_5()); }
(rule__Expression__MainfeatureAssignment_3_5)
{ after(grammarAccess.getExpressionAccess().getMainfeatureAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__6__Impl
	rule__Expression__Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCommaKeyword_3_6()); }

	',' 

{ after(grammarAccess.getExpressionAccess().getCommaKeyword_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__7__Impl
	rule__Expression__Group_3__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExtendfeatureAssignment_3_7()); }
(rule__Expression__ExtendfeatureAssignment_3_7)
{ after(grammarAccess.getExpressionAccess().getExtendfeatureAssignment_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_3_8()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Expression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__0__Impl
	rule__Expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getContainerAction_4_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getContainerAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__1__Impl
	rule__Expression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getContainerKeyword_4_1()); }

	'container' 

{ after(grammarAccess.getExpressionAccess().getContainerKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__2__Impl
	rule__Expression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_4_2()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__3__Impl
	rule__Expression__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentAssignment_4_3()); }
(rule__Expression__ArgumentAssignment_4_3)
{ after(grammarAccess.getExpressionAccess().getArgumentAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_4_4()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__0__Impl
	rule__Expression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCastToAction_5_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getCastToAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__1__Impl
	rule__Expression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_5_1()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__2__Impl
	rule__Expression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTypeAssignment_5_2()); }
(rule__Expression__TypeAssignment_5_2)
{ after(grammarAccess.getExpressionAccess().getTypeAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__3__Impl
	rule__Expression__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_5_3()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionAssignment_5_4()); }
(rule__Expression__ExpressionAssignment_5_4)
{ after(grammarAccess.getExpressionAccess().getExpressionAssignment_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_6__0__Impl
	rule__Expression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNullAction_6_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getNullAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNullKeyword_6_1()); }

	'null' 

{ after(grammarAccess.getExpressionAccess().getNullKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__0__Impl
	rule__Expression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNewNameAction_7_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getNewNameAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__1__Impl
	rule__Expression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNewnameKeyword_7_1()); }

	'newname' 

{ after(grammarAccess.getExpressionAccess().getNewnameKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__2__Impl
	rule__Expression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_7_2()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__3__Impl
	rule__Expression__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentAssignment_7_3()); }
(rule__Expression__ArgumentAssignment_7_3)
{ after(grammarAccess.getExpressionAccess().getArgumentAssignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_7_4()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__0__Impl
	rule__Expression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCloneAction_8_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getCloneAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__1__Impl
	rule__Expression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCloneKeyword_8_1()); }

	'clone' 

{ after(grammarAccess.getExpressionAccess().getCloneKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__2__Impl
	rule__Expression__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_8_2()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__3__Impl
	rule__Expression__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentAssignment_8_3()); }
(rule__Expression__ArgumentAssignment_8_3)
{ after(grammarAccess.getExpressionAccess().getArgumentAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_8_4()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9__0__Impl
	rule__Expression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTerminalExpressionParserRuleCall_9_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getExpressionAccess().getTerminalExpressionParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_9_1()); }
(rule__Expression__Group_9_1__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9_1__0__Impl
	rule__Expression__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCompoundExpressionMainExpressionAction_9_1_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getCompoundExpressionMainExpressionAction_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9_1__1__Impl
	rule__Expression__Group_9_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOpAssignment_9_1_1()); }
(rule__Expression__OpAssignment_9_1_1)
{ after(grammarAccess.getExpressionAccess().getOpAssignment_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_9_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSubExpressionAssignment_9_1_2()); }
(rule__Expression__SubExpressionAssignment_9_1_2)
{ after(grammarAccess.getExpressionAccess().getSubExpressionAssignment_9_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__0__Impl
	rule__VariableReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getVariableReferenceAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarRefAssignment_1()); }
(rule__VariableReference__VarRefAssignment_1)
{ after(grammarAccess.getVariableReferenceAccess().getVarRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexedVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedVariable__Group__0__Impl
	rule__IndexedVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedVariableAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getIndexedVariableAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedVariable__Group__1__Impl
	rule__IndexedVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedVariableAccess().getVarRefAssignment_1()); }
(rule__IndexedVariable__VarRefAssignment_1)
{ after(grammarAccess.getIndexedVariableAccess().getVarRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedVariable__Group__2__Impl
	rule__IndexedVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedVariableAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getIndexedVariableAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedVariable__Group__3__Impl
	rule__IndexedVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedVariableAccess().getIndexAssignment_3()); }
(rule__IndexedVariable__IndexAssignment_3)
{ after(grammarAccess.getIndexedVariableAccess().getIndexAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedVariableAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getIndexedVariableAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SubExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_0__0__Impl
	rule__SubExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getIndexedAction_0_0()); }
(

)
{ after(grammarAccess.getSubExpressionAccess().getIndexedAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_0__1__Impl
	rule__SubExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getFeatureAssignment_0_1()); }
(rule__SubExpression__FeatureAssignment_0_1)
{ after(grammarAccess.getSubExpressionAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_0__2__Impl
	rule__SubExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getLeftSquareBracketKeyword_0_2()); }

	'[' 

{ after(grammarAccess.getSubExpressionAccess().getLeftSquareBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_0__3__Impl
	rule__SubExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getIndexAssignment_0_3()); }
(rule__SubExpression__IndexAssignment_0_3)
{ after(grammarAccess.getSubExpressionAccess().getIndexAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getRightSquareBracketKeyword_0_4()); }

	']' 

{ after(grammarAccess.getSubExpressionAccess().getRightSquareBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SubExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__0__Impl
	rule__SubExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getFeatureAction_1_0()); }
(

)
{ after(grammarAccess.getSubExpressionAccess().getFeatureAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getFeatureAssignment_1_1()); }
(rule__SubExpression__FeatureAssignment_1_1)
{ after(grammarAccess.getSubExpressionAccess().getFeatureAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeJudgmentSymbol__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeJudgmentSymbol__Group__0__Impl
	rule__TypeJudgmentSymbol__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeJudgmentSymbol__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTypeJudgmentSymbolAccess().getAlternativeParserRuleCall_0()); }
(	ruleAlternative)
{ after(grammarAccess.getTypeJudgmentSymbolAccess().getAlternativeParserRuleCall_0()); }
)
(
{ before(grammarAccess.getTypeJudgmentSymbolAccess().getAlternativeParserRuleCall_0()); }
(	ruleAlternative)*
{ after(grammarAccess.getTypeJudgmentSymbolAccess().getAlternativeParserRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeJudgmentSymbol__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeJudgmentSymbol__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeJudgmentSymbol__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeJudgmentSymbolAccess().getTypeRelationParserRuleCall_1()); }
	ruleTypeRelation
{ after(grammarAccess.getTypeJudgmentSymbolAccess().getTypeRelationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListComposition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComposition__Group__0__Impl
	rule__ListComposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComposition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListCompositionAccess().getColonParserRuleCall_0()); }
	ruleColon
{ after(grammarAccess.getListCompositionAccess().getColonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListComposition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComposition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComposition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListCompositionAccess().getColonParserRuleCall_1()); }
	ruleColon
{ after(grammarAccess.getListCompositionAccess().getColonParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__JudgmentDescription__UnorderedGroup_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5());
    }
:
	rule__JudgmentDescription__UnorderedGroup_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5());
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__UnorderedGroup_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getJudgmentDescriptionAccess().getGroup_5_0()); }
						(rule__JudgmentDescription__Group_5_0__0)
						{ after(grammarAccess.getJudgmentDescriptionAccess().getGroup_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getJudgmentDescriptionAccess().getGroup_5_1()); }
						(rule__JudgmentDescription__Group_5_1__0)
						{ after(grammarAccess.getJudgmentDescriptionAccess().getGroup_5_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getJudgmentDescriptionAccess().getGroup_5_2()); }
						(rule__JudgmentDescription__Group_5_2__0)
						{ after(grammarAccess.getJudgmentDescriptionAccess().getGroup_5_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getJudgmentDescriptionAccess().getBinaryAssignment_5_3()); }
						(rule__JudgmentDescription__BinaryAssignment_5_3)
						{ after(grammarAccess.getJudgmentDescriptionAccess().getBinaryAssignment_5_3()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJudgmentDescriptionAccess().getUnorderedGroup_5());
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__UnorderedGroup_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__UnorderedGroup_5__Impl
	rule__JudgmentDescription__UnorderedGroup_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__UnorderedGroup_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__UnorderedGroup_5__Impl
	rule__JudgmentDescription__UnorderedGroup_5__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__UnorderedGroup_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__UnorderedGroup_5__Impl
	rule__JudgmentDescription__UnorderedGroup_5__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__JudgmentDescription__UnorderedGroup_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JudgmentDescription__UnorderedGroup_5__Impl
;
finally {
	restoreStackSize(stackSize);
}










rule__TypeSystemDefinition__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeSystemDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__EPackageAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getEPackageEPackageCrossReference_2_0()); }
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getEPackageEPackageSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING{ after(grammarAccess.getTypeSystemDefinitionAccess().getEPackageEPackageSTRINGTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTypeSystemDefinitionAccess().getEPackageEPackageCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__GenModelAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getGenModelSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeSystemDefinitionAccess().getGenModelSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__JudgmentDescriptionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getJudgmentDescriptionsJudgmentDescriptionParserRuleCall_4_1_0()); }
	ruleJudgmentDescription{ after(grammarAccess.getTypeSystemDefinitionAccess().getJudgmentDescriptionsJudgmentDescriptionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystemDefinition__RulesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSystemDefinitionAccess().getRulesRuleParserRuleCall_5_0()); }
	ruleRule{ after(grammarAccess.getTypeSystemDefinitionAccess().getRulesRuleParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__JudgmentsymbolAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getJudgmentsymbolSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getJudgmentDescriptionAccess().getJudgmentsymbolSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__RelationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getRelationSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getJudgmentDescriptionAccess().getRelationSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__KindAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getKindSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getJudgmentDescriptionAccess().getKindSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__SuccessAssignment_5_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getSuccessSTRINGTerminalRuleCall_5_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getJudgmentDescriptionAccess().getSuccessSTRINGTerminalRuleCall_5_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__FailAssignment_5_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getFailSTRINGTerminalRuleCall_5_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getJudgmentDescriptionAccess().getFailSTRINGTerminalRuleCall_5_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__NomatchAssignment_5_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getNomatchSTRINGTerminalRuleCall_5_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getJudgmentDescriptionAccess().getNomatchSTRINGTerminalRuleCall_5_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JudgmentDescription__BinaryAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getBinaryBinaryKeyword_5_3_0()); }
(
{ before(grammarAccess.getJudgmentDescriptionAccess().getBinaryBinaryKeyword_5_3_0()); }

	'binary' 

{ after(grammarAccess.getJudgmentDescriptionAccess().getBinaryBinaryKeyword_5_3_0()); }
)

{ after(grammarAccess.getJudgmentDescriptionAccess().getBinaryBinaryKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAxiomAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAxiomAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__TypejudgmentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAxiomAccess().getTypejudgmentTypingJudgmentWithEnvironmentParserRuleCall_2_0()); }
	ruleTypingJudgmentWithEnvironment{ after(grammarAccess.getAxiomAccess().getTypejudgmentTypingJudgmentWithEnvironmentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleWithPremisesAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__TypejudgmentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getTypejudgmentTypingJudgmentWithEnvironmentParserRuleCall_3_0()); }
	ruleTypingJudgmentWithEnvironment{ after(grammarAccess.getRuleWithPremisesAccess().getTypejudgmentTypingJudgmentWithEnvironmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleWithPremises__PremisesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleWithPremisesAccess().getPremisesTypingJudgmentParserRuleCall_5_0()); }
	ruleTypingJudgment{ after(grammarAccess.getRuleWithPremisesAccess().getPremisesTypingJudgmentParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__BranchesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getBranchesOrBranchParserRuleCall_1_0()); }
	ruleOrBranch{ after(grammarAccess.getOrTypingJudgmentAccess().getBranchesOrBranchParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__BranchesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getBranchesOrBranchParserRuleCall_2_1_0()); }
	ruleOrBranch{ after(grammarAccess.getOrTypingJudgmentAccess().getBranchesOrBranchParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrTypingJudgment__ErrorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrTypingJudgmentAccess().getErrorErrorSpecificationParserRuleCall_4_0()); }
	ruleErrorSpecification{ after(grammarAccess.getOrTypingJudgmentAccess().getErrorErrorSpecificationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrBranch__JudgmentsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrBranchAccess().getJudgmentsTypingJudgmentParserRuleCall_0()); }
	ruleTypingJudgment{ after(grammarAccess.getOrBranchAccess().getJudgmentsTypingJudgmentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__ExpressionTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getExpressionTypeExpressionTypeParserRuleCall_1_0()); }
	ruleExpressionType{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getExpressionTypeExpressionTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__OpAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getOpAssignOpParserRuleCall_3_0_0()); }
	ruleAssignOp{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getOpAssignOpParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWithType__RightAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWithTypeAccess().getRightExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationWithTypeAccess().getRightExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__CollectionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getCollectionListKeyword_0_0()); }
(
{ before(grammarAccess.getCollectionTypeAccess().getCollectionListKeyword_0_0()); }

	'List' 

{ after(grammarAccess.getCollectionTypeAccess().getCollectionListKeyword_0_0()); }
)

{ after(grammarAccess.getCollectionTypeAccess().getCollectionListKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getTypeExpressionTypeParserRuleCall_2_0()); }
	ruleExpressionType{ after(grammarAccess.getCollectionTypeAccess().getTypeExpressionTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EClassifierType__EclassifierAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEClassifierTypeAccess().getEclassifierEClassifierCrossReference_0()); }
(
{ before(grammarAccess.getEClassifierTypeAccess().getEclassifierEClassifierIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getEClassifierTypeAccess().getEclassifierEClassifierIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getEClassifierTypeAccess().getEclassifierEClassifierCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__BasicAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getBasicAlternatives_0()); }
(rule__BasicType__BasicAlternatives_0)
{ after(grammarAccess.getBasicTypeAccess().getBasicAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableSimpleDeclaration__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableSimpleDeclarationAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getVariableSimpleDeclarationAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Quantification__ErrorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantificationAccess().getErrorErrorSpecificationParserRuleCall_1_0()); }
	ruleErrorSpecification{ after(grammarAccess.getQuantificationAccess().getErrorErrorSpecificationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getForEachAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__VariableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getVariableVariableSimpleDeclarationParserRuleCall_3_0()); }
	ruleVariableSimpleDeclaration{ after(grammarAccess.getForEachAccess().getVariableVariableSimpleDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__JudgmentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachAccess().getJudgmentsTypingJudgmentParserRuleCall_5_0()); }
	ruleTypingJudgment{ after(grammarAccess.getForEachAccess().getJudgmentsTypingJudgmentParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getVariableVariableSimpleDeclarationParserRuleCall_1_0()); }
	ruleVariableSimpleDeclaration{ after(grammarAccess.getForAllAccess().getVariableVariableSimpleDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getForAllAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForAll__JudgmentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllAccess().getJudgmentsTypingJudgmentParserRuleCall_5_0()); }
	ruleTypingJudgment{ after(grammarAccess.getForAllAccess().getJudgmentsTypingJudgmentParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__NotAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getNotExclamationMarkKeyword_0_0()); }
(
{ before(grammarAccess.getExistsAccess().getNotExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getExistsAccess().getNotExclamationMarkKeyword_0_0()); }
)

{ after(grammarAccess.getExistsAccess().getNotExclamationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getVariableVariableSimpleDeclarationParserRuleCall_2_0()); }
	ruleVariableSimpleDeclaration{ after(grammarAccess.getExistsAccess().getVariableVariableSimpleDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getExistsAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__JudgmentsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getJudgmentsTypingJudgmentParserRuleCall_6_0()); }
	ruleTypingJudgment{ after(grammarAccess.getExistsAccess().getJudgmentsTypingJudgmentParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__LeftAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getLeftEnvironmentIdParserRuleCall_0_1_0()); }
	ruleEnvironmentId{ after(grammarAccess.getEnvironmentOperationAccess().getLeftEnvironmentIdParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__RightAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getRightEnvironmentParserRuleCall_0_3_0()); }
	ruleEnvironment{ after(grammarAccess.getEnvironmentOperationAccess().getRightEnvironmentParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__LeftAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getLeftEnvironmentIdParserRuleCall_1_1_0()); }
	ruleEnvironmentId{ after(grammarAccess.getEnvironmentOperationAccess().getLeftEnvironmentIdParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__RightAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getRightEnvironmentStatementParserRuleCall_1_4_0()); }
	ruleEnvironmentStatement{ after(grammarAccess.getEnvironmentOperationAccess().getRightEnvironmentStatementParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__LeftAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getLeftEnvironmentIdParserRuleCall_2_1_0()); }
	ruleEnvironmentId{ after(grammarAccess.getEnvironmentOperationAccess().getLeftEnvironmentIdParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentOperation__RightAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentOperationAccess().getRightTypingStatementExpressionParserRuleCall_2_4_0()); }
	ruleTypingStatementExpression{ after(grammarAccess.getEnvironmentOperationAccess().getRightTypingStatementExpressionParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__LeftAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getLeftExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getListOperationAccess().getLeftExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__RightAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getRightExpressionParserRuleCall_0_4_0()); }
	ruleExpression{ after(grammarAccess.getListOperationAccess().getRightExpressionParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__LeftAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getLeftExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getListOperationAccess().getLeftExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOperation__RightAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOperationAccess().getRightExpressionParserRuleCall_1_4_0()); }
	ruleExpression{ after(grammarAccess.getListOperationAccess().getRightExpressionParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getLeftExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getRightExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getLeftExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getEqualsAccess().getLeftExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getOpAlternatives_1_0()); }
(rule__Equals__OpAlternatives_1_0)
{ after(grammarAccess.getEqualsAccess().getOpAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getRightExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getEqualsAccess().getRightExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equals__ErrorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualsAccess().getErrorErrorSpecificationParserRuleCall_3_0()); }
	ruleErrorSpecification{ after(grammarAccess.getEqualsAccess().getErrorErrorSpecificationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__ErrorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailAccess().getErrorErrorSpecificationParserRuleCall_2_0()); }
	ruleErrorSpecification{ after(grammarAccess.getFailAccess().getErrorErrorSpecificationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgmentWithEnvironment__EnvironmentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getEnvironmentEnvironmentParserRuleCall_0_0()); }
	ruleEnvironment{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getEnvironmentEnvironmentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgmentWithEnvironment__TypejudgmentsymbolAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getTypejudgmentsymbolTypeJudgmentSymbolParserRuleCall_1_0()); }
	ruleTypeJudgmentSymbol{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getTypejudgmentsymbolTypeJudgmentSymbolParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgmentWithEnvironment__TypingstatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getTypingstatementTypingStatementParserRuleCall_2_0()); }
	ruleTypingStatement{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getTypingstatementTypingStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingJudgmentWithEnvironment__ErrorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getErrorErrorSpecificationParserRuleCall_3_0()); }
	ruleErrorSpecification{ after(grammarAccess.getTypingJudgmentWithEnvironmentAccess().getErrorErrorSpecificationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorSpecification__FailureErrorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorSpecificationAccess().getFailureErrorFailureErrorParserRuleCall_2_0()); }
	ruleFailureError{ after(grammarAccess.getErrorSpecificationAccess().getFailureErrorFailureErrorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FailureError__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailureErrorAccess().getOpPlusOpParserRuleCall_1_1_0()); }
	rulePlusOp{ after(grammarAccess.getFailureErrorAccess().getOpPlusOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FailureError__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailureErrorAccess().getRightFailureErrorParserRuleCall_1_2_0()); }
	ruleFailureError{ after(grammarAccess.getFailureErrorAccess().getRightFailureErrorParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalError__ErrStringAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalErrorAccess().getErrStringSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getTerminalErrorAccess().getErrStringSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalError__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalErrorAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getTerminalErrorAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStatement__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStatementAccess().getLeftTypingStatementExpressionParserRuleCall_0_0()); }
	ruleTypingStatementExpression{ after(grammarAccess.getTypingStatementAccess().getLeftTypingStatementExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStatement__RelationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStatementAccess().getRelationTypeRelationParserRuleCall_1_0()); }
	ruleTypeRelation{ after(grammarAccess.getTypingStatementAccess().getRelationTypeRelationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStatement__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStatementAccess().getRightTypingStatementExpressionParserRuleCall_2_0()); }
	ruleTypingStatementExpression{ after(grammarAccess.getTypingStatementAccess().getRightTypingStatementExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getOpEnvironmentCompositionParserRuleCall_1_1_0()); }
	ruleEnvironmentComposition{ after(grammarAccess.getEnvironmentAccess().getOpEnvironmentCompositionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__SubEnvironmentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getSubEnvironmentEnvironmentParserRuleCall_1_2_0()); }
	ruleEnvironment{ after(grammarAccess.getEnvironmentAccess().getSubEnvironmentEnvironmentParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentId__EnvironmentIdAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentIdAccess().getEnvironmentIdIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEnvironmentIdAccess().getEnvironmentIdIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentStatement__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentStatementAccess().getLeftTypingStatementExpressionParserRuleCall_0_0()); }
	ruleTypingStatementExpression{ after(grammarAccess.getEnvironmentStatementAccess().getLeftTypingStatementExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentStatement__RelationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentStatementAccess().getRelationMappingRelationParserRuleCall_1_0()); }
	ruleMappingRelation{ after(grammarAccess.getEnvironmentStatementAccess().getRelationMappingRelationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentStatement__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentStatementAccess().getRightTypingStatementExpressionParserRuleCall_2_0()); }
	ruleTypingStatementExpression{ after(grammarAccess.getEnvironmentStatementAccess().getRightTypingStatementExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyEnvironment__EmptyAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyEnvironmentAccess().getEmptyEmptyKeyword_0()); }
(
{ before(grammarAccess.getEmptyEnvironmentAccess().getEmptyEmptyKeyword_0()); }

	'empty' 

{ after(grammarAccess.getEmptyEnvironmentAccess().getEmptyEmptyKeyword_0()); }
)

{ after(grammarAccess.getEmptyEnvironmentAccess().getEmptyEmptyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__EnvIdAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getEnvIdEnvironmentIdParserRuleCall_1_3_0()); }
	ruleEnvironmentId{ after(grammarAccess.getExpressionAccess().getEnvIdEnvironmentIdParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgumentAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentExpressionParserRuleCall_1_5_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getArgumentExpressionParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgumentAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentExpressionParserRuleCall_2_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getArgumentExpressionParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionExpressionParserRuleCall_3_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExpressionExpressionParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__MainfeatureAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getMainfeatureEStructuralFeatureCrossReference_3_5_0()); }
(
{ before(grammarAccess.getExpressionAccess().getMainfeatureEStructuralFeatureIDTerminalRuleCall_3_5_0_1()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getMainfeatureEStructuralFeatureIDTerminalRuleCall_3_5_0_1()); }
)
{ after(grammarAccess.getExpressionAccess().getMainfeatureEStructuralFeatureCrossReference_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExtendfeatureAssignment_3_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExtendfeatureEStructuralFeatureCrossReference_3_7_0()); }
(
{ before(grammarAccess.getExpressionAccess().getExtendfeatureEStructuralFeatureIDTerminalRuleCall_3_7_0_1()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getExtendfeatureEStructuralFeatureIDTerminalRuleCall_3_7_0_1()); }
)
{ after(grammarAccess.getExpressionAccess().getExtendfeatureEStructuralFeatureCrossReference_3_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgumentAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentExpressionParserRuleCall_4_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getArgumentExpressionParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TypeAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTypeExpressionTypeParserRuleCall_5_2_0()); }
	ruleExpressionType{ after(grammarAccess.getExpressionAccess().getTypeExpressionTypeParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionAssignment_5_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionExpressionParserRuleCall_5_4_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExpressionExpressionParserRuleCall_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgumentAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentSTRINGTerminalRuleCall_7_3_0()); }
	RULE_STRING{ after(grammarAccess.getExpressionAccess().getArgumentSTRINGTerminalRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgumentAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgumentExpressionParserRuleCall_8_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getArgumentExpressionParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OpAssignment_9_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOpFullStopKeyword_9_1_1_0()); }
(
{ before(grammarAccess.getExpressionAccess().getOpFullStopKeyword_9_1_1_0()); }

	'.' 

{ after(grammarAccess.getExpressionAccess().getOpFullStopKeyword_9_1_1_0()); }
)

{ after(grammarAccess.getExpressionAccess().getOpFullStopKeyword_9_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SubExpressionAssignment_9_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSubExpressionSubExpressionParserRuleCall_9_1_2_0()); }
	ruleSubExpression{ after(grammarAccess.getExpressionAccess().getSubExpressionSubExpressionParserRuleCall_9_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstant__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerConstantAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntegerConstantAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VarRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarRefVariableDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVarRefVariableDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getVarRefVariableDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVarRefVariableDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedVariable__VarRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedVariableAccess().getVarRefVariableDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getIndexedVariableAccess().getVarRefVariableDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIndexedVariableAccess().getVarRefVariableDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIndexedVariableAccess().getVarRefVariableDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedVariable__IndexAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedVariableAccess().getIndexArrayIndexParserRuleCall_3_0()); }
	ruleArrayIndex{ after(grammarAccess.getIndexedVariableAccess().getIndexArrayIndexParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getFeatureENamedElementCrossReference_0_1_0()); }
(
{ before(grammarAccess.getSubExpressionAccess().getFeatureENamedElementIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSubExpressionAccess().getFeatureENamedElementIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getSubExpressionAccess().getFeatureENamedElementCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__IndexAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getIndexArrayIndexParserRuleCall_0_3_0()); }
	ruleArrayIndex{ after(grammarAccess.getSubExpressionAccess().getIndexArrayIndexParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__FeatureAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getFeatureENamedElementCrossReference_1_1_0()); }
(
{ before(grammarAccess.getSubExpressionAccess().getFeatureENamedElementIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSubExpressionAccess().getFeatureENamedElementIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getSubExpressionAccess().getFeatureENamedElementCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


