xtext "platform:/resource/gpp.testing.boxmodel.operators/src/gpp/testing/boxmodel/operators/Protobuf.xtext"

import "platform:/resource/gpp.testing.boxmodel.operators/src/gpp/testing/boxmodel/operators/operators.ppo"

TBOX[Default]: <F>;
TBOX[INT]: <F w=bold>;
TBOX[ML_COMMENT]: <F i=italic,c="#00FF00">, <MC>;
TBOX[SL_COMMENT]: <F i=italic,c="#00FF00">, <SC>;
TBOX[Keyword, "^\\w.*$"]: <F c="#FF0000">;

PBOX[Proto]:
	<V vs=2>[
		<V>[options:Option]
		imports:Import
		<H hs=0>[<H>['package' name:FQN] ';']
		<V>[options:Option]
		elements:ProtoElement
	]
;


PBOX[FQN]:
	<H hs=0>[ID ('.' ID)]
;


PBOX[ProtoElement]:
	<V>[
		Type | ExtendMessage
	]
;


PBOX[Type]:
	<V>[
		Message | Enum
	]
;


PBOX[Option]:
	<H hs=0>[<H>['option' name:ID '=' value:(ID | STRING)] ';']
;


PBOX[Message]:
	<V>[
		<H>['message' name:ID]
		'{'
		<I>[elements:MessageElement]
		<H>[('extensions' extensionsFrom:INT 'to' (extensionsTo:INT | 'max') ';')]
		'}'
	]
;


PBOX[ExtendMessage]:
	<V>[
		<H>['extend' message:[Message|ID]]
		'{'
		<I>[elements:MessageElement]
		'}'
	]
;


PBOX[MessageElement]:
	<V>[
		Type | Property
	]
;


PBOX[Enum]:
	<V>[
		<H>['enum' name:ID]
		'{'
		<I>[literals:Literal]
		<H hs=0>['}' ';']
	]
;


PBOX[Literal]:
	<H hs=0>[<H>[name:ID '=' index:INT] ';']
;


PBOX[Property]:
	<H hs=0>[<H>[
		modifier:Modifier type:AbstractTypeReference name:(ID | 'package') '=' index:INT
		(<H hs=0>['[' <H>['default' '=' defaultValue:ValueRef] ']'])
		';'
	]]
;


PBOX[ValueRef]:
	<V>[
		LiteralRef | BooleanRef | IntRef
	]
;


PBOX[LiteralRef]:
	<V>[
		literal:[Literal|ID]
	]
;


PBOX[BooleanRef]:
	<V>[
		value:BOOL
	]
;


PBOX[IntRef]:
	<V>[
		value:INT
	]
;


PBOX[AbstractTypeReference]:
	<V>[
		ScalarTypeReference | TypeReference
	]
;


PBOX[ScalarTypeReference]:
	<V>[
		scalar:ScalarType
	]
;


PBOX[TypeReference]:
	<V>[
		type:[Type|ID]
	]
;


PBOX[Import]:
	<H hs=0>[<H>['import' importURI:STRING] ';']
;

